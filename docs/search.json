[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "공간데이터사이언스 개론",
    "section": "",
    "text": "서장\n데이터사이언스는 주어진 데이터를 바탕으로 질문에 대한 해답을 찾고, 그 과정을 서로 소통하는 학문이다. 데이터사이언스에서의 소통은 단순히 결과를 보여주는 것에 그치지 않고, 사용된 데이터를 공유하고, 답을 도출하는 과정을 포괄적이고 재현 가능한 방식으로 제시하는 것을 포함한다. 또한 데이터사이언스는 주어진 데이터가 질문에 답하기에 충분치 않을 수 있음을, 그리고 비록 답이 도출되었다 하더라도 데터 수집 또는 표집 방식에 따라 답이 달라질 수 있음을 인정한다.\n이 책은 공간적 데이터의 기본 개념을 소개하고 설명한다. 포인트, 라인, 폴리곤, 래스터, 커버리지, 지오메트리 속성, 데이터 큐브, 참조계와 같은 기초 개념에서부터 속성이 지오메트리와 어떻게 연결되는지와 이것이 분석에 어떤 영향을 끼치는지 등과 관련된 보다 고차원적인 개념도 다룬다. 속성과 지오메트리의 관계를 서포트(support)라고 하는데, 서포트가 변경되면 속성의 특성도 변화한다. 어떤 데이터는 공간적 연속성에 기반해 생성되기 때문에 모든 지점에서 관찰될 수 있다. 반면, 다른 데이터는 공간적 이산성에 기반해 생성되기 때문에 특정한 구획 체계에 의거해 관찰된다. 현대 공간데이터분석에서는 이러한 구획 체계 방식이 빈번히 사용되며, 포인트 데이터, 지구통계학적 데이터, 에어리어 데이터를 가리지 않고 폭넓게 적용되고 있다. 공간적 재현의 중요성을 뒷받침하는 것이 바로 서포트(그리고 서포트에 대한 이해)이다. 이 책은 공간데이터를 자신의 분석에 활용하고자 하는 데이터 과학자를 대상으로 하고 있다. 어떻게 공간데이터분석을 행하는 지를 예시하기 위해 R를 사용한다. 향후에 파이썬(Python)(예: Bivand 2022a)과 줄리아(Julia)을 사용한 예시도 추가할 예정이다.\n사람들은 종종 공간데이터란 관측 개체의 경위도값이 데이터셋에 포함되어 있는 것을 의미하고, 경위도값을 여타의 변수와 마찬가지로 취급하면 된다고 생각한다. 이는 기회를 놓치고 무의미한 분석을 초래할 위험이 있다. 다음과 같은 예를 들 수 있다.\n우리는 공간데이터, 좌표참조계, 공간분석과 관련된 다양한 개념을 소개하고, 더불어 sf (Pebesma 2018, 2022a), stars (Pebesma 2022b), s2 (Dunnington, Pebesma, and Rubak 2023) and lwgeom (Pebesma 2023)와 같은 다양한 R 패키지를 소개한다. 또한 공간적 타이디버스 (Wickham et al. 2019; Wickham 2022) 확정 패키지 및 이들 패키지와 함께 사용할 수 있는 공간분석 및 시각화 패키지인 gstat (Pebesma 2004; Pebesma and Graeler 2022), spdep (Bivand 2022b), spatialreg (Bivand and Piras 2022), spatstat (Baddeley, Rubak, and Turner 2015; Baddeley, Turner, and Rubak 2022), tmap (Tennekes 2018, 2022), mapview (Appelhans et al. 2022)도 포함된다.\n데이터사이언스와 마찬가지로, 공간데이터사이언스도 특정 과학 분야의 하위 분야로 발전한 것이 아니라 공간데이터의 적용과 관련된 수많은 학문 혹은 산업 영역로부터 상향식으로 발전해 온 분야인 것으로 보인다. 학술 컨퍼런스, 심포지움, 학회, 연구 프로그램 등을 통해 공간데이터사이언스를 규정하려는 다양한 시도들이 이루어지고는 있지만, 공간데이터의 적용 영역이 너무나 다양하기 때문에 이러한 활동이 결실을 맺기는 쉽지 않아 보인다. 이 책에 “공간데이터사이언스”라는 제목을 붙이는 것은 이 분야의 경계를 획정하려는 또 다른 시도가 아니라, 연구 주제, 데이터, 소프트웨어를 활용한 연구 과정, 이 모두를 기꺼이 공유하고자 한 수 많은 분야의 수 많은 연구자들과 함께 한 지난 30~40년간의 경험을 이 분야의 발전을 위해 쓰고 싶기 때문이다. 따라서 이 책에서 다루는 주제의 선택은 우리 자신의 연구 관심 분야와 경험에 의해 어느정도 편향되어 있을 수 밖에 없다.\n개방형 연구 커뮤니티를 만드는 데 도움을 준 플랫폼으로는 ai-geostats 및 r-sig-geo 메일링 리스트, sourceforge, r-forge, GitHub, 그리고 2006년부터 매년 개최되는 OpenGeoHub 여름 학교가 있다. 데이터사이언스의 언어 장벽을 넘고자 한 수 많은 노력의 결과 현재 우리는 새롭고도 가슴뛰는 퍼스펙티브가 열리고 있음을 목도하고 있다. 이 분야에 기여하고자 하는 것은 오픈사이언스가 더 나은 과학으로 이어지며, 더 나은 과학이 보다 지속 가능한 세상에 기여할 수 있다는 믿음 때문이다.",
    "crumbs": [
      "서장"
    ]
  },
  {
    "objectID": "part_1.html",
    "href": "part_1.html",
    "title": "공간데이터",
    "section": "",
    "text": "이 첫 번째 파트에서는 공간데이터사이언스의 핵심 개념을 다룬다. 지도, 투영, 벡터와 래스터 데이터 구조, 소프트웨어, 속성과 서포트, 데이터 큐브와 같은 개념들에 대해 배울 것이다. R은 이 파트에서는 별로 중요하지 않다. 주로 텍스트 아웃풋이나 그래프 작성을 위해서만 사용될 것이다. 따라서 내용에 집중한다는 의미에서 R코드 자체를 보여주거나 설명하는 일은 없을 것이다. R은 두 번째 파트에서 집중적으로 다루어진다. 그래도 이 책의 온라인 버전(https://r-spatial.org/book/)을 통해 감춰진 R 코드를 펼쳐 볼 수 있고, 필요한 경우 클립보드에 복사하여 실행해 볼 수 있다. R 코드를 실행한 결과는 # 기호로 시작하며 코드 폰트를 사용하여 나타낸다.\n# Linking to GEOS 3.11.1, GDAL 3.6.4, PROJ 9.1.1; sf_use_s2() is TRUE\n공간데이터사이언스 문제에 답을 제시하기 위한 R 코드에 대한 보다 상세한 설명은 이 책의 두 번째 파트에서 시작한다. 부록 B — R 기초 에는 R 데이터 구조에 대한 간략한 설명이 나타나 있다. 보다 자세한 사항은 Wickham (2019) 을 참고하라.\n\n\n\n\nWickham, Hadley. 2019. Advanced R. 2nd edition. Boca Raton: Chapman; Hall/CRC.",
    "crumbs": [
      "공간데이터"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Wickham, Hadley. 2019. Advanced r. 2nd edition. Boca Raton:\nChapman; Hall/CRC.\n\n\nWickham, Hadley, Mine Çetinkaya-Rundel, and Garrett Grolemund. 2023.\nR for data science: import, tidy, transform, visualize, and model\ndata. 2nd edition. Boston: O’Reilly.",
    "crumbs": [
      "부록",
      "References"
    ]
  },
  {
    "objectID": "06.html",
    "href": "06.html",
    "title": "6  데이터 큐브",
    "section": "",
    "text": "장 7",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>데이터 큐브</span>"
    ]
  },
  {
    "objectID": "01.html",
    "href": "01.html",
    "title": "1  시작하기",
    "section": "",
    "text": "1.1 첫 번째 지도\n공간데이터를 표현하는 전형적인 방법은 지도를 그리는 것이다. 그림 1.1 에는 단순한 지도가 나타나 있다.\n그림 1.1: 첫 번째 지도: 미국 노스캐롤라이나의 카운티별 출생아수, 1974~78년\n이 지도에는 몇 가지 그래픽 요소들이 나타나 있다.\n폴리곤은 특정한 형태의 지오메트리이다. 공간적 지오메트리(포인트, 라인, 폴리곤, 픽셀)에 대해서는 장 3 에서 자세히 다룬다. 폴리곤은 여러 개의 포인트들로 구성되어 있고, 포인트들은 선분으로 서로 이어져 있다. 공간데이터의 포인트 위치가 어떻게 표현되고 측정되는지에 대해서는 장 2 에서 다룬다. 그림 1.1 에서 볼 수 있는 것처럼, 모든 경위선이 직선으로 표현되는 것이 아니다. 이것은 지도에 특정한 형태의 투영법이 적용되어 있음을 의미한다. 지도투영에 대해서는 장 2 와 섹션 8.1 에서 다룬다.\n그림 1.1 에서 컬러로 표현되어 있는 것은 BIR74라는 변수의 값이다. 값 하나는 지오메트리 혹은 피쳐(feature) 하나와 연결되어 있다. 장 5 은 이러한 피처 속성 및 그것들이 피처 지오메트리와 어떻게 관련되어 있는지에 대해서 다룰 것이다. BIR74 변수는 출생아수를 나타내며, 이는 지역별 빈도값이다. 지역별 빈도값이라는 말은 이 값이 지역 내의 모든 지점과 관련되어 있는 것이 아니라는 것을 의미하는데, 지도의 컬러가 연속적인 값을 취하고 있기 때문에 이렇게 오해할 수 있지만, 사실 빈도값은 폴리곤에 전체와 연결되어 있는 일종의 적분값을 의미한다.\n그림 1.1 을 그리기 위해서는 당연히 데이터가 필요한데, 섹션 7.1 에서 사용된 파일을 읽어 들였다. 세 개의 속성 변수에 대한 첫 세 개 레코드의 데이터 요약을 출력하면 다음과 같다:\nSimple feature collection with 100 features and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965\nGeodetic CRS:  NAD27\n# A tibble: 100 × 4\n   AREA BIR74 SID74                                                         geom\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;                                           &lt;MULTIPOLYGON [°]&gt;\n1 0.114  1091     1 (((-81.47276 36.23436, -81.54084 36.27251, -81.56198 36.273…\n2 0.061   487     0 (((-81.23989 36.36536, -81.24069 36.37942, -81.26284 36.405…\n3 0.143  3188     5 (((-80.45634 36.24256, -80.47639 36.25473, -80.53688 36.256…\n# ℹ 97 more rows\n이 데이터 요약은 다음의 사항을 알려준다:\n패싯(facet) 플롯을 활용하면 그림 1.2 에서 보는 것과 같은 보다 복잡한 형태의 지도를 그릴 수 있다.\n그림 1.2: 미국 노스캐롤라이나 카운티별 영아돌연사증후군에 의한 사망아수의 패싯 지도, 1974~78년과 1979~84년\n리플릿(leaflet)을 활용하면 그림 1.3 에서 보는 것과 같은 상호작용형 지도를 만들 수 있다.\n그림 1.3: mapview로 그린 상호작용형 지도: 팬과 줌을 이용해 지도 스케일에 변화를 줄 수 있고 카운티를 클릭하면 해당 카운티의 속성을 보여주는 팝업 윈도우가 뜬다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#첫-번째-지도",
    "href": "01.html#첫-번째-지도",
    "title": "1  시작하기",
    "section": "",
    "text": "검은색 외곽선을 가진 폴리곤이 나타나 있고, 폴리곤의 내부는 BIR74라는 변수(제목)의 값에 따라 상이한 컬러로 채워져 있다.\n범례는 서로 다른 컬러가 무엇을 의미하는지를 설명하고 있는데, 특정한 컬러 팔레트가 적용되어 있고, 컬러가 변하는 지점에 컬러 단절값이 나타나 있다.\n경위선망(그래티큘)이 지도의 배경에 나타나 있다.\n축의 눈금은 특정한 경도값과 위도값이다.\n\n\n\n\n\n\n\n데이터셋은 100개의 피처(레코드)와 3개의 필드(속성)으로 구성되어 있다.\n지오메트리 유형은 MULTIPOLYGON (장 3 )이다.\n디멘션(dimension)은 XY이다. 즉, 개별 포인트는 두 개의 좌표값으로 구성되어 있다.\n좌표참조계(CRS, coordinate reference system)는 측지(geodetic) 좌표계이며, NAD27 데이텀(datum)에 의거한 경위도값을 가지고 있다(장 2 ).\n세 개의 속성 변수 바로 다음에 MULTIPOLYGON 유형의 geom 변수가 있는데, 이것은 폴리곤 정보를 도(degree) 형식으로 담고있다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "08.html",
    "href": "08.html",
    "title": "8  공간데이터의 시각화",
    "section": "",
    "text": "8.1 모든 지도는 투영법을 가지고 있다.",
    "crumbs": [
      "공간데이터사이언스와 R",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>공간데이터의 시각화</span>"
    ]
  },
  {
    "objectID": "03.html",
    "href": "03.html",
    "title": "3  지오메트리",
    "section": "",
    "text": "3.1 심플 피쳐 지오메트리\n심플 피처 지오메트리는 피처의 지오메트리를 설명하는 방법이다. 여기서 피처란 지오메트리를 가진 사물을 의미하는데, 암묵적으로 시간 속성을 가질 수 있고, 사물 자체를 묘사하기 위한 라벨이나 사물을 정량적으로 측정한 값과 관련된 속성을 가질 수 있다. 단순 피처 지오메트리의 주된 용도는 2차원 공간의 기하학적 형태를 포인트, 라인, 또는 폴리곤에 의거해 설명하는 것이다. “심플”이라는 형용사가 붙은 이유는 라인이나 폴리곤 지오메트리 역시 포인트 지오메트리와 그것을 연결한 직선으로 표현될 수 있기 때문이다.\n심플 피처 억세스(access)는 심플 피처 지오메트리를 설명하는 표준으로(Herring 2011, 2010; ISO 2004), 다음의 사항을 포함한다.\n먼저 가장 일반적으로 사용되는 7가지 심플 피처 지오메트리 유형에 대해 논의할 것이다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "part_2.html",
    "href": "part_2.html",
    "title": "공간데이터사이언스와 R",
    "section": "",
    "text": "The second part of this book explains how the concepts introduced in the first part are dealt with using R. 7  sf와 stars deals with basic handling of spatial data: reading, writing, subsetting, selecting by spatial predicates, geometry transformers like buffers or intersections, raster-vector and vector-raster conversion, handling of data cubes, spherical geometry, coordinate transformations and conversions.",
    "crumbs": [
      "공간데이터사이언스와 R"
    ]
  },
  {
    "objectID": "index.html#사사",
    "href": "index.html#사사",
    "title": "공간데이터사이언스 개론",
    "section": "사사",
    "text": "사사\n우리는 r-spatial 커뮤니티 전체에 감사하며, 특히 다음에 기여한 분들께 특별한 감사의 마음을 전한다.\n\nr-spatial 패키지를 개발하거나 그 개발에 기여한 분들\n트위터 #rspatial 또는 GitHub에서 디스커션에 참여한 분들\n강좌, 여름 학교, 또는 컨퍼런스에서 의견을 주거나 질문을 한 분들\n\n우리는 s2 패키지를 구현한 Dewey Dunnington, 적극적인 도움을 준 Sahil Bhandari, 6  데이터 큐브 의 그래프 제작을 도와준 Jonathan Bahlmann, 그리고 Claus Wilke와 Jakub Nowosad에게 특별한 감사의 마음을 전한다. 2021년과 2022년에 있었던 “R을 활용한 공간데이터사이언스(Spatial Data Science with R)” 강좌로부터 큰 도움을 받았다. GitHub의 이슈, 풀 리퀘스트 또는 디스커션에 적극적으로 기여한 분들께도 감사의 마음을 표한다.\n\n책 리포지터리에 기여한 분들 (Nowosad, jonathom, JaFro96, singhkpratham, liuyadong, hurielreichel, PPaccioretti, Robinlovelace, Syverpet, jonas-hurst, angela-li, ALanguillaume, florisvdh, ismailsunni, andronaco)\nsf 리포지터리에 기여한 분들 (aecoleman, agila5, andycraig, angela-li, ateucher, barryrowlingson, bbest, BenGraeler, bhaskarvk, Bisaloo, bkmgit, christophertull, chrisyeh96, cmcaine, cpsievert, daissi, dankelley, DavisVaughan, dbaston, dblodgett-usgs, dcooley, demorenoc, dpprdan, drkrynstrng, etiennebr, famuvie, fdetsch, florisvdh, gregleleu, hadley, hughjonesd, huizezhang-sherry, jeffreyhanson, jeroen, jlacko, joethorley, joheisig, JoshOBrien, jwolfson, kadyb, karldw, kendonB, khondula, KHwong12, krlmlr, lambdamoses, lbusett, lcgodoy, lionel-, loicdtx, marwahaha, MatthieuStigler, mdsumner, MichaelChirico, microly, mpadge, mtennekes, nikolai-b, noerw, Nowosad, oliverbeagley, Pakillo, paleolimbot, pat-s, PPaccioretti, prdm0, ranghetti, rCarto, renejuan, rhijmans, rhurlin, rnuske, Robinlovelace, robitalec, rubak, rundel, statnmap, thomasp85, tim-salabim, tyluRp, uribo, Valexandre, wibeasley, wittja01, yutannihilation, Zedseayou)\nstars 리포지터리에 기여한 분들(a-benini, ailich, ateucher, btupper, dblodgett-usgs, djnavarro, ErickChacon, ethanwhite, etiennebr, flahn, floriandeboissieu, gavg712, gdkrmr, jannes-m, jeroen, JoshOBrien, kadyb, kendonB, mdsumner, michaeldorman, mtennekes, Nowosad, pat-s, PPaccioretti, przell, qdread, Rekyt, rhijmans, rubak, rushgeo, statnmap, uribo, yutannihilation)\ns2 리포지토리에 기여한 분들(kylebutts, spiry34, jeroen, eddelbuettel)",
    "crumbs": [
      "서장"
    ]
  },
  {
    "objectID": "07.html",
    "href": "07.html",
    "title": "7  sf와 stars",
    "section": "",
    "text": "7.1 sf 패키지",
    "crumbs": [
      "공간데이터사이언스와 R",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>sf와 stars</span>"
    ]
  },
  {
    "objectID": "01.html#crs",
    "href": "01.html#crs",
    "title": "1  시작하기",
    "section": "\n1.2 CRS",
    "text": "1.2 CRS\n\n\n\n그림 1.1: 첫 번째 지도: 미국 노스캐롤라이나의 카운티별 출생아수, 1974~78년\n그림 1.2: 미국 노스캐롤라이나 카운티별 영아돌연사증후군에 의한 사망아수의 패싯 지도, 1974~78년과 1979~84년",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#좌표참조계",
    "href": "01.html#좌표참조계",
    "title": "1  시작하기",
    "section": "\n1.2 좌표참조계",
    "text": "1.2 좌표참조계\n그림 1.1 의 배경에 그어진 회색선은 경위선망, 즉 그래티큘(graticule)이다. 경위선이 두 축과 직교하는 직선이 아니라는 점이 명백하다. 이것은 데이터에 특정한 투영법이 적용되어 있음을 의미한다. 그런데 그림 1.3 에는 노스케롤라이나의 북쪽 경계가 곡선이 아닌 직선으로 표현되어 있는데, 이것은 또 다른 투영법이 적용되었음을 의미한다.\n그림 1.1 에 나타나 있는 경위도 좌표는 특정한 데이텀(여기서는 NAD27)과 연결되어 있다(역자주: 경위도 좌표는 절대적인 것이 아니라 데이텀에 따라 달라지는 상대적인 것이라는 점을 반드시 이해해야 한다. 동일한 지점이 데이텀에 따라 다른 경위도 좌표값을 부여받고, 동일한 경위도 좌표값이 데이텀에 따라 지표 상의 다른 지점을 의미한다). 데이텀은 지구를 모델화하기 위해 어떤 지구타원체가 선택되고, 그 지구타원체를 지구와 어떠한 방식으로 일치시킬 것인가(지구타원체의 원점을 지구의 어떤 지점과 어떠한 방향으로 일치시킬 것인가)와 관련된 몇 가지 사항들을 규정한다. GPS 수신기(예: 모바일 폰)를 통해 획득된 좌표값은 WGS84(World Geodetic System 1984) 데이텀에 의거한 것인데, 만일 NAD27(North American Datum 1927)에 의거한 것이라면 동일한 좌표값에 대해 대략 30m 정도의 편차를 나타낼 것이다.\n투영법은 두 개의 좌표값을 연결하는 함수이다.\n\n타원체 좌표(ellipsoidal coordinates): 지구에 대한 수학적 모델(지구타원체 혹은 지구구체) 상의 3차원 좌표로, 경도와 위도로 나타낸 것이다.\n투영 좌표(projected coordinates): 지도 상의 2차원 평면 좌표로, x 좌표와 y 좌표 혹은 동거(easting)와 북거(northing)로 나타낸 것이다.\n\n한 데이텀을 다른 데이텀으로 바꾸는 것을 데이텀 변환이라고 한다. 투영과 좌표계는 공간참조계(spatial reference system)의 설정과 관련되어 있고, 장 2 에서 상세히 다룬다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#래스터-데이터와-벡터-데이터",
    "href": "01.html#래스터-데이터와-벡터-데이터",
    "title": "1  시작하기",
    "section": "\n1.3 래스터 데이터와 벡터 데이터",
    "text": "1.3 래스터 데이터와 벡터 데이터\n포인트, 라인, 폴리곤 지오메트리는 벡터(vector) 데이터의 예시이다. 벡터 지오메트리를 구성하는 좌표값은 지표 상의 “정확한” 위치를 의미한다. 이에 반해 래스터 데이터는 주로 정사각형 픽셀로 구성된 격자망(이것을 래스터라고 부름)에 속성값이 부여되어 있는 데이터이다. 래스터 데이터의 예가 그림 1.4 에 나타나 있다.\n\n\n\n\n\n\n\n그림 1.4: 브라질의 대서양 연안 도시 올린다에 대한 래스터 지도: (a) Landsat-7의 블루 탐지대를 타나낸 것으로 서로 다른 컬러는 속성값의 차이를 나타냄. (b) 좌상의 10X10 픽셀만 확대하여 나타낸 것임. (c) 3개의 샘플 포인트로 구성된 벡터 데이터를 중첩하여 나타냄. (d) 샘플 포인트로부터 반경 500m를 나타낸 3개의 폴리곤으로 구성된 벡터 데이터를 중첩하여 나타냄.\n\n\n\n\n벡터 데이터와 래스터 데이터를 여러 가지 방식으로 결합될 수 있다. 예를 들어, 그림 1.4 (c)에 나타나 있는 세 포인트에 해당하는 래스터 값만을 추출할 수도 있고, 그림 1.4 (d)에 나타나 있는 원과 결부된 모든 래스터 값을 추출할 수도 있다.\n래스터-투-벡터 전환은 섹션 7.6에서 다루어지는데, 다음과 같은 내용이 포함된다.\n\n래스터 픽셀값을 포인트 속성값으로 전환하기\n래스터 픽셀값을 폴리곤 속성값으로 전환한 후, 동일한 속성값을 가진 폴리곤을 머지하기(“폴리곤 생성”)\n특정한 범위의 값을 가진 연속적인 픽셀 연속체를 나타내는 라인이나 폴리곤을 생성하기(“등치선 생성”)\n\n\n\n\n\n\n\n\n그림 1.5: 그림 1.1에 나타나 있는 카운티별 출생아수(1974~78)를 래스터화하여 나타낸 지도\n\n\n\n\n벡터-투-래스터 전환은 그림 1.5 에 나타나 있는 것(폴리곤의 래스터화)처럼 매우 간단한 것일 수 있다. 그러나 다른 형태의 벡터-투-래스터 전환은 통계적 모델링을 수반할 수 있다.\n\n포인트 속성값을 인터폴레이션을 통해 그리드 셀에 할당하기 (12장)\n포인트의 밀도 분포를 추정하여 그리드 셀에 할당하기 (11장)\n폴리곤의 속성값을 에어리어-가중 인터폴레이션을 통해 그리드 셀에 할당하기 (섹션 5.3)\n포인트, 라인, 폴리곤을 래스터로 직접 변환하기 (섹션 7.6)",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#래스터-유형",
    "href": "01.html#래스터-유형",
    "title": "1  시작하기",
    "section": "\n1.4 래스터 유형",
    "text": "1.4 래스터 유형\n래스터 디멘션은 행과 열이 공간 좌표계와 어떻게 관련되어 있는가에 의해 결정된다. 그림 1.6 은 다양한 가능성을 예시로 보여주고 있다.\n\n\n\n\n\n\n\n그림 1.6: 다양한 래스터 지오메트리 유형\n\n\n\n\n그림 1.6 에 나타나 있는 레귤러(regular) 래스터는 일정한 모양(반드시 정사각형일 필요는 없다)의 그리드 셀로 이루어져 있고, 가로추과 세로축이 x-축(동거축)과 y-축(북거축)과 일치한다. 그러나 다른 래스터 유형도 존재할 수 있는데, 가로축과 세로축이 더 이상 x-축 및 y-축과 일치하지 않거나(rotated), 가로축과 세로축이 직교하지 않거나(sheared), 셀 크기가 동일 축 상에서 조차 다르게 나타날 수 있다(rectilinear). 심지어 curvilinear 래스터의 경우는 셀의 크기 및 방향 속성이 더 이상 또 다른 래스터 디멘션으로부터 독립적이지 않다(?).\n특정한 좌표참조계에 의거해 regular한 지오메트리 유형을 가진 래스터가 있다고 하자. 이것을 셀 구조는 그대로둔 상태로 다른 투영법으로 전환하게 되면, rectilinear 하게 될 수도 있고(예를 들어, 그림 1.3 에서처럼, 측지좌표를 메르카토르 도법으로 전환하는 경우), curvilinear 해 질 수도 있다(예를 들어, 그림 1.1 에서처럼, 측지좌표를 람베르트 정형원추 도법으로 전환하는 경우). 이 전환을 역으로 수행하게 되면 정확히 동일한 래스터를 회복할 수 있다.\n새로운 투영법이 적용된 새로운 레귤러 그리드를 생성하는 것을 래스터(혹은 이미지) 재투영(reprojection) 혹은 워핑(warping)이라고 한다(섹션 7.8). 워핑은 정보 손실이 발생하고, 불가역적이며, 다양한 옵션의 설정이 필수적이다. 예를 들어, 새로운 셀 값을 생성하기 위해 인터폴레이션을 적용할지, 평균값을 산출할지, 합산값을 산출할지를 결정해야 하며, 이웃값을 활용한 재표집(resampling)이 적용되어야 할지의 여부를 결정해야 한다. 이러한 선택은 래스터 셀 값이 범주형인지 연속형인지에 따라 달라질 수 있다(섹션 1.6).",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#시계열-어레이-데이터-큐브",
    "href": "01.html#시계열-어레이-데이터-큐브",
    "title": "1  시작하기",
    "section": "\n1.5 시계열, 어레이, 데이터 큐브",
    "text": "1.5 시계열, 어레이, 데이터 큐브\n많은 공간데이터는 단지 공간적이기만 한 것이 아니라 시간적이기도 하다. 모든 관측치는 그것이 관측된 특정한 지점과 결부되어 있을 뿐만 아니라 관측이 이루어진 특정한 시간과도 결부되어 있다. 노스캐롤라이나 카운티 데이터셋은 그림 1.2에서 보는 것처럼 두 기간의 관측값을 가지고 있다. 원 데이터셋에서는 두 기간이 두 개의 변수로 저장되어 있었겠지만, 그림 1.2처럼 두 개의 패싯 지도로 표현되기 위해서는 지오메트리의 반복을 통해 두 변수가 하나의 컬럼에 길게 이어져 있는 형태로 변형되어야 한다. 이러한 형태를 위컴(Wickham)(2014)은 타이디(tidy) 형태라고 부른바 있다. 그런데 지오메트리와 연결된 긴 시계열(time series) 데이터를 가지고 있을 때, 두 개의 옵션(시간을 여러 개의 컬럼에 할당하거나 지오메트리의 반복을 통해 시간을 하나의 컬럼에 길게 배열하는 것) 중 어는 것도 적절해 보이지는 않는다. 이런 경우 보다 효과적인 방법은 메트릭스나 어레이(array) 형식을 취해, 하나의 차원에는 시간을 할당하고 나머지 차원에는 공간을 할당하는 것이다. 이미지나 래스터 데이터는 이미 이러한 방식대로 매트릭스 형태로 저장되어 있고, 여기에 시간이 첨가되면 3차원의 어레이 형태가 된다. 그러한 데이터를 부를는 일반 용어가 바로 (시공간적) 데이터 큐브이다. 큐브는 차원의 개수에 구애받지 않는 어레이를 의미한다. 데이터 큐브는 벡터 데이터와 래스터 데이터 모두를 지칭하는데 사용될 수 있고, 예시들이 6장에서 제시될 것이다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#서포트",
    "href": "01.html#서포트",
    "title": "1  시작하기",
    "section": "\n1.6 서포트",
    "text": "1.6 서포트\n단순한 포인트 지오메트리가 아니라 포인트 집합체의 지오메트리(다중-포인트, 라인, 폴리곤, 픽셀)를 가지 공간데이터의 경우 결부되어 있는 속성값은 지오메트리와 몇 가지 상이한 방식의 관련성을 갖는다.\n\n지오메트리의 모든 포인트에 공통적으로 적용되는 동일값\n지오메트리의 모든 포인트를 집합적으로 대표하는 합산값\n개별 지오메트리의 고유성을 표현하는 식별값\n\n동일값의 예로 폴리곤의 토지이용 속성이나 기반암 유형 속성을 들 수 있고, 합산값의 예로 카운티의 출생아수를 들 수 있고, 식별값으로 카운티 이름을 들 수 있다(역자주: 폴리곤의 토지이용은 폴리곤 내의 모든 지점에 공통적으로 적용될 수 있고, 카운티의 출생아수는 카운티 내 모든 지점의 출생아수를 합산했다는 의미이므로 카운티 내의 모든 지점에 그 값이 적용될 수는 없고, 카운티 전체를 집합적으로 대표한다).\n한 속성값과 결부되어 있는 공간적 개체를 속성값의 서포트라고 한다. 합산값은 “블록” (폴리곤 혹은 라인) 서포트를 갖고 동일값은 “포인트” 서포트를 갖는다 (동일값은 모든 포인트에 적용된다). 예를 들어, 그림 1.5는 폴리곤 서포트를 갖는 변수(카운티별 출생아수)로부터 도출된 것으로, 카운티별 속성값을 카운티를 구성하는 픽셀의 속성값으로 할당한 것이다. 이러한 래스터화를 통해 생성된 지도는 무의미한다. 즉, 속성값인 카운티별 “총출생아수”는 래스터 셀과 무관하며, 속성값과 결부되어 있는 카운티의 경계는 표시 조차되어 있지 않다. 이 지도로부터 노스캐롤라이나 주 전체의 출생아수나 출생아 밀도를 재계산하는 것은 불가능하다. 이처럼 서포트를 무시하는 것은 무의미한 지도의 산출로 귀결된다. 5장에서 좀 더 심도있게 다룰 것이다.\n래스터 셀 속성은 포인트 서포트를 가질 수도 있고 블록 스포트를 가질 수도 있다. 포인트 서포트의 예로 고도를 들 수 있는데, 디지털고도모델(digital elevation model)의 경우 보통 셀 중심점의 고도값을 셀의 속성값으로 저장한다. 블록 서포트 (혹은 셀 서포트)의 예로 위성영상을 들 수 있는데, 이미지 픽셀의 속성값은 주로 픽셀(혹은 픽셀을 중심으로 한 특정 영역) 내부의 값들의 평균값이다. 대부분의 파일 포맷은 이러한 정보를 제공하지 않는다. 그러나 래스터 데이터를 애그리게이팅(aggregating), 리그리딩(regridding), 워핑하거나(섹션 7.8), 포인트별 값을 추출할 때 매우 중요한 사안이다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#공간데이터사이언스를-위한-소프트웨어",
    "href": "01.html#공간데이터사이언스를-위한-소프트웨어",
    "title": "1  시작하기",
    "section": "\n1.7 공간데이터사이언스를 위한 소프트웨어",
    "text": "1.7 공간데이터사이언스를 위한 소프트웨어\n이 책의 기본 프로그래밍 언어는 R이고, 공간데이터사이언스를 위한 다양한 R 패키지를 활용한다. 그런데 우리가 사용할 R 패키지 중 많은 것들이 R만을 위해서 개발되지는 않은 다양한 소프트웨어 라이브러리를 활용하고 있다. 하나의 예로서, 그림 1.7은 sf 패키지의 의존계(dependency), 즉 sf 패키지가 어떤 R 패키지나 어떤 시스템 라이브러리에 의존하고 있는지를 보여주고 있다.\n\n\n\n\n\n그림 1.7: sf의 의존계: 직선은 강한 의존성을 점선은 약한 의존성을 나타낸다.\n\n\nC 혹은 C++ 라이브러리(GDAL, GEOS, PROJ, liblwgeom, s2geometry, NetCDF, udunits2)는 모두 R 커뮤니티와는 직접 관련성이 없는 (공간) 데이터사이언스 커뮤니티에 의해 개발, 유지 및 사용되고 있다. 이러한 라이브러리를 활용함으로써 R 사용자들은 이러한 다른 커뮤니티와 무엇을 공유하고 협업하고 있는지를 이해하게 된다. R, 파이썬, 줄리아는 상호작용형 인터페이스를 제공하고 있기 때문에 동일한 라이브러리를 활용하는 다른 소프트웨어의 사용자들과는 달리 이러한 라이브러리에 보다 가깝게 접근할 수 있다. 이 책의 첫 번째 파트에서는 이러한 라이브러리에 어떤한 개념이 녹아들어 있는지를 설명하고자 하는데, 공간데이터사이언스 일반을 이해하는데 도움이 될 것이다.\n\n1.7.1 GDAL\nGDAL(Geospatial Data Abstraction Library)는 공간데이터에 대한 스위스 아미 나이프(Swiss army knife)정도로 생각할 수 있다. GDAL는 R, 파이썬, PostGIS 외에 100개가 넘는 다른 소프트웨어 프로젝트에서 사용되고 있다.\nGDAL은 공간데이터를 읽고 쓸수 있게 해주는 라이브러리 중의 라이브러리로, 수많은 다른 라이브러리를 필요로 한다. 대략 100개가 넘는 라이브러리와 연결되어 있는데, 개별 라이브러리는 특정한 데이터 파일 포맷, 특정한 데이터베이스, 특정한 웹서비스, 특정한 압축 코덱을 다룰 수 있다.\nCRAN(역자주: CRAN은 The Comprehensive R Archive Network의 약자로서, R의 수많은 패키지의 저장소로 이해하면 된다. R 언어 자체의 과거와 현재의 버전들 뿐만 아니라 현재 대략 20,000개 이상의 R 패키지가 모여 있다. 1997년 Kurt Hornik와 Friedrich Leisch에 의해 처음 만들어졌으며 현재에도 Hornik와 많은 자원봉사자들에 의해 운영되고 있다)에서 배포되는 바이너리 형식의 R 패키지에는 스태틱 링크 코드(statically linked code)만 포함되어 있는데, 이는 CRAN이 패키지의 호스트 시스템에 서드파티(third-party) 라이브러리가 존재하는지 그렇지 않은지에 대한 가정을 하지 않으려 하기 때문이다. 그 결과 CRAN으로부터 바이너리 형식의 sf 패키지를 인스톨하면, sf 패키지의 의존계 뿐만 아니라 모든 외부 라이브러리도 함께 다운로드되기 때문에 용량이 100 Mb에 달한다.\n\n1.7.2 PROJ\nPROJ(혹은 PR\\(\\phi\\)J)는 지도투영과 데이텀변환을 위한 라이브러리이다. 공간 좌표를 하나의 CRS로부터 다른 CRS로 바꾸어 준다. PROJ 속에는 현재까지 알려져 있는 수많은 투영법에 대한 데이터베이스가 포함되어 있으며, 데이터 그리드(데이텀변환을 위한 고정밀 계수값)에 접근할 수 있게 해준다. CRS의 국제 표준에 맞추어져 있다(Lott 2015). 2장에서 좌표계와 PROJ를 자세히 다룬다.\n\n1.7.3 GOES와 s2geometry\nGOES(Geometry Engine Open Source)와 s2geometry는 지오메트리 오퍼레이션을 위한 라이브러리이다. 이 라이브러리를 활용해 기하학적 측정(길이, 면적, 거리), 논리적 판단(두 지오메트리가 포인트를 공유하고 있는지의 여부), 새로운 지오메트리의 생성(두 지오메트리가 공유하고 있는 포인트) 등의 오퍼레이션을 수행할 수 있다. GEOS는 이러한 오퍼레이션을 2차원 평면(\\(R^2\\))에서 수행할 수 있게 해주고, s2geometry는 3차원 구면(\\(S^2\\))에서 수행할 수 있게 해준다. 2장에서 CRS를 다루며, 4장에서는 2차원 공간과 3차원 공간을 다루는 데 있어 차이점에 대해 더 자세히 논의한다.\n\n1.7.4 NetCDF, udunits2, liblwgeom\nNetCDF(UCAR 2020)은 파일 형식이자 NetCDF 파일을 읽고 쓰기 위한 C 라이브러리를 의미한다. NetCDF를 통해 모든 차원의 어레이를 정의할 수 있으며, 특히 (기후) 모델링 커뮤니티에서 공간 및 시공간 정보를 다루는데 널리 사용된다. Udunits2(UCAR 2014; Pebesma, Mailud, and Hiebert 2016; Pebesma et al. 2022)는 측정 단위와 관련된 데이터베이스이자 소프트웨어 라이브러리이다. Udunits2를 통해 측정 단위간 전환 및 파생 단위의 처리를 할 수 있고, 사용자-정의 단위에 대한 지원을 받을 수 있다. liblwgeom “라이브러리”는 POSTGIS(Obe and Hsu 2015)의 소프트웨어 요소로서 GDAL이나 GEOS에서는 다루지 않는 몇 가지 루틴을 포함하고 있다. 예를 들어 PROJ를 장착하고 있는 GeographicLib 루틴에 쉽게 접근할 수 있게 해준다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "01.html#연습문제",
    "href": "01.html#연습문제",
    "title": "1  시작하기",
    "section": "\n1.8 연습문제",
    "text": "1.8 연습문제\n\n래스터 데이터와 백터 데이터의 차이점 다섯 가지를 나열하라.\n그림 1.1 아래에 나열되어 있는 것 외에, 지도의 그래픽 요소 다섯 개를 더 나열하라.\n그림 1.5에 나타나 있는 수치 정보가 왜 오해를 불러일으키는지(혹은 무의미한지)에 대해 얘기해 보라.\n지오메트리 오퍼레이션을 \\(S^2\\)에서 행하는 것과 \\(R^2\\)에서 행하는 것의 차이가 가장 극명하게 드러나는 상황을 예를 들어 설명해 보라.\n\n\n\n\n그림 1.1: 첫 번째 지도: 미국 노스캐롤라이나의 카운티별 출생아수, 1974~78년\n그림 1.2: 미국 노스캐롤라이나 카운티별 영아돌연사증후군에 의한 사망아수의 패싯 지도, 1974~78년과 1979~84년\n그림 1.4: 브라질의 대서양 연안 도시 올린다에 대한 래스터 지도: (a) Landsat-7의 블루 탐지대를 타나낸 것으로 서로 다른 컬러는 속성값의 차이를 나타냄. (b) 좌상의 10X10 픽셀만 확대하여 나타낸 것임. (c) 3개의 샘플 포인트로 구성된 벡터 데이터를 중첩하여 나타냄. (d) 샘플 포인트로부터 반경 500m를 나타낸 3개의 폴리곤으로 구성된 벡터 데이터를 중첩하여 나타냄.\n그림 1.5: 그림 1.1에 나타나 있는 카운티별 출생아수(1974~78)를 래스터화하여 나타낸 지도\n그림 1.6: 다양한 래스터 지오메트리 유형\n그림 1.7: sf의 의존계: 직선은 강한 의존성을 점선은 약한 의존성을 나타낸다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>시작하기</span>"
    ]
  },
  {
    "objectID": "02.html",
    "href": "02.html",
    "title": "2  좌표계",
    "section": "",
    "text": "2.1 퀀티티, 단위, 데이텀\nVIM(International Vocabulary of Metrology, BIPM et al., 2012)는 콴티티에 대해 “현상, 물체 또는 물질의 속성으로, 이 속성은 숫자로 표현할 수 있는 크기와 준거를 가진다.” 여기서 “준거는 측정 단위, 측정 절차, 기준 물질 또는 이러한 것들의 조합일 수 있다.”라고 기술한다. 모든 데이터가 퀀티티로 구성되어 있는지에 대해 논의할 수 있지만, 적절한 데이터 처리를 위해서는 숫자(또는 기호)와 자체 뿐만 아니라 숫자가 무엇을 의미하는지, 특히 숫자가 어떤 준거에 기반하고 있는지에 대한 정보가 함께 제공되어야 한다는 점에 대해서는 논의할 필요가 없다.\n측정 시스템은 기본 퀀티티에 대한 기본 단위와 파생 퀀티티에 대한 파생 단위로 구성된다. 예를 들어, SI 단위계(Bureau International des Poids et Mesures 2006)는 일곱개의 기본 단위로 구성된다: 길이(미터, m), 질량(킬로그램, kg), 시간(초, s), 전류(암페어, A), 열역학적 온도(켈빈, K), 물질의 양(몰, mol), 그리고 광도(칸델라, cd). 파생 단위는 기본 단위의 정수 거듭제곱의 곱으로 구성되며, 예를 들어 속도(\\(\\text{m s}^{-1}\\))나 밀도(\\(\\text{kg s}^{-1}\\)), 면적( \\(\\text{m}^{2}\\)) 등이 있다. 특별한 경우에는 무단위 측정이 있을 수 있는데, 단위가 서로 소거되는 경우(예: 질량 분율: kg/kg 또는 라디안으로 측정된 각: m/m)나 물체나 사건의 빈도를 세는 경우(예: “5개의 사과”)이다. 각도와 사과의 개수를 더하는 것은 의미가 없지만, 5개의 사과와 3개의 오렌지를 더하는 것은 의미가 있을 수 있으며, 이 경우 결과를 상위 클래스(즉, 과일의 개수)로 재해석할 수 있다. Hand(2004)는 측정 단위의 맥락에서 다양한 측정 스케일에 대해 논의한 바 있는데, 예를 들어 사회과학에서 지능과 같은 변수를 측정하는데 사용되는 측정 스케일과 같은 것이다.\n많은 퀀티티의 경우 값의 자연적인 원점은 0이다. 이러한 자연적 원점의 개념은 양(amount)이라는 퀀티티에 잘 들어맞는다. 두 양의 차는 의미 있는 음의 값일 수 있다. 위치와 시간의 차도 이러한 자연적 원점 개념으로 해석될 수 있다. 즉, 위치의 차는 거리이고, 시간의 차는 지속기간이다. 절대적인 위치와 시간은 고정된 원점이 필요하며, 이를 기준으로 다른 절대적인 시공간적 지점을 의미 있게 측정할 수 있다. 이러한 기준을 우리는 데이텀이라고 부른다. 공간의 경우, 데이텀은 하나 이상의 차원을 포함한다. 데이텀과 측정 단위(스케일)의 조합이 하나의 참조계를 구성한다.\n이제 공간적 위치를 타원체 좌표 또는 데카르트 좌표로 표현하는 방법에 대해 자세하게 설명하고자 한다. 다음 섹션에서는 시간 및 공간 참조계과 R에서 이러한 참조계를 처리하는 방법에 대해 다룰 것이다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "02.html#타원좌표계",
    "href": "02.html#타원좌표계",
    "title": "2  좌표계",
    "section": "\n2.2 타원좌표계",
    "text": "2.2 타원좌표계\n\n\n\n\n\n\n\n그림 2.1: 2차원 극 좌표계와 데카르트 좌표계\n\n\n\n\n그림 2.1은 2차원 극 좌표계와 데카르트 좌표계를 보여주고 있다. 해당 지점의 데카르트 좌표는 \\((x,y)=(3,4)\\)으로 주어지고, 극 좌표는 \\((r,\\phi)=(5,\\text{arctan(4/3)})\\)으로 주어지는데 \\(\\text{arctan(4/3)}\\)는 대략 \\(0.93\\) 라디안 혹은 \\(53^\\circ\\)이다. 여기서 \\(x\\), \\(y\\), \\(r\\)은 모두 길이 단위이고 \\(\\phi\\)는 각도 단위(무단위 길이/길이 비)라는 점에 유의할 필요가 있다. 데카르트 좌표와 극 좌표 간의 변환은 매우 간단하다.\n\\[\nx=r\\cos\\phi,\\quad y=r\\sin\\phi, \\text{and}\n\\]\n\\[\nr=\\sqrt{x^2+y^2}, \\quad \\phi=\\text{atan2}(y,x)\n\\]\n여기서 \\(\\text{atan2}\\)이 \\(\\text{atan}(y/x)\\)대신 사용되었는데, 오른쪽 일사분면에 위치가 있기 때문이다.\n\n2.2.1 구체 혹은 타원체 좌표계\n3차원의 경우, 데카르트 좌표계는 \\((x,y,z)\\)로 주어지고, 극 좌표계는 \\((r,\\lambda,\\phi)\\)로 주어진다.\n\n\\(r\\)은 구체의 반지름이다.\n\\(\\lambda\\)는 경도로, \\((x,y)\\) 평면에서 양의 \\(x\\)축으로부터 반시계방향으로 측정된다.\n\\(\\phi\\)는 위도로, \\((x,y)\\) 평면과 해당 벡터가 이루는 각도이다.\n\n그림 2.2는 데카르트 지심 좌표계와 타원체 좌표계를 보여준다.\n\n\n\n\n\n\n\n그림 2.2: 세 개의 거리로 표현되는 데카르트 지심 좌표계(왼편)와 두 개의 각도와 하나의 타원체고로 표현되는 타원체 좌표계(오른편)\n\n\n\n\n\\(\\lambda\\)는 \\(-180^\\circ\\)에서 \\(180^\\circ\\) 사이의 값(혹은 \\(0^\\circ\\)에서 \\(360^\\circ\\) 사이의 값)을 갖고, \\(\\phi\\)는 \\(-90^\\circ\\)에서 \\(90^\\circ\\) 사이의 값을 갖는다. 타원체가 아니라 고정된 반지름 갖는 구체 상의 위치만을 상정할 경우 위의 \\(r\\)을 생략한 \\((\\lambda,\\phi)\\) 만으로도 모든 위치를 규정하기에 충분하다.\n이것은 단지 하나의 정의일 뿐이며, 예를 들어 위도 대신 해당 벡터와 \\(z\\) 축 사이의 각도인 극각을 측정할 수도 있다는 점에 유의해야 한다. 좌표값을 \\((\\phi,\\lambda)\\)의 형태로 나타내는 오랜 전통이 있지만 이 책에서는 경도-위도 형식(\\(\\lambda,\\phi\\))을 사용할 것이다. 그림 2.2에 표시된 지점은 각도값으로 구성된 \\((\\lambda,\\phi)\\) 혹은 타원체 좌표값을 가지며 도 단위로 주어진다.\n\n\nPOINT (60 47)\n\n\n지심좌표값은 미터 단위로 주어진다.\n\n\nPOINT Z (2178844 3773868 4641765)\n\n\n타원체 상의 지점에 대해서는 각도를 나타내는 두 가지 방법이 있다(그림 2.3). 하나는 타원체의 중심을 기준으로 측정된 각도(\\(\\psi\\)), 또는 해당 지점을 지나는 접선에 수직으로 측정된 각도(\\(\\phi\\))이다.\n\n\n\n\n\n\n\n그림 2.3: 타원체 상의 각도: 측지 위도(푸른색)와 지심 위도(붉은색)\n\n\n\n\n\n2.2.2 투영좌표계, 거리\n종이 지도와 컴퓨터 화면이 지구본보다 훨씬 더 실용적이고 널리 사용되기 때문에, 우리는 공간데이터를 보통 2차원 평면 상에 투영된 형태로 보게 된다. 이차원 공간에서 위치를 계산한다는 것은 우리가 투영 좌표를 사용한다는 것을 의미한다. 타원체 좌표를 투영한다는 것은 형태, 방향, 면적 또는 이 세 가지 모두가 왜곡된다는 것을 의미한다(Iliffe and Lott 2008).\n데카르트 좌표계에서 두 지점 \\(p_i\\)와 \\(p_j\\) 간의 거리는 유클리드 거리로 계산되며, 2차원의 경우 \\(p_i=(x_i,y_i)\\)이므로 다음의 수식으로 주어진다.\n\\[\nd_{ij}=\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2}\n\\]\n3차원의 경우는 \\(p_i=(x_i,y_i,z_i)\\)이므로, 다음의 수식으로 주어진다.\n\\[\nd_{ij}=\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2+(z_i-z_j)^2}\n\\]\n이 거리는 지점 \\(i\\)와 지점 \\(j\\) 사이의 직선 거리의 길이를 의미한다.\n원 상의 두 지점의 경우, 두 지점 \\(c_i=(r,\\phi_1)\\)와 \\(c_j=(r,\\phi_2)\\) 사이의 호의 길이는 다음과 같이 주어진다. \\[\ns_{ij}=r|\\phi_1-\\phi_2|=r\\theta\n\\] 여기서 \\(\\theta\\)는 \\(\\phi_1\\)과 \\(\\phi_2\\) 사이의 각도를 라디안으로 나타낸 것이다. \\(\\theta\\)의 값이 매우 작다면 호가 직선에 가깝기 때문에 \\(s_{ij}\\approx d_{ij}\\)가 성립한다.\n반지름이 \\(r'\\)인 구체 상의 두 지점 \\(p_1=(\\lambda_1,\\phi_1)\\)과 \\(p_2=(\\lambda_2,\\phi_2)\\)의 경우, 두 지점 \\(p_1\\)과 \\(p_2\\)를 통과하는 원(이 원의 중심은 구체의 중심과 일치) 상에서의 두 지점 사이의 호의 길이를 대권거리(great circle distance)라고 하며, \\(s_{12}=r\\theta_{12}\\)로 주어진다. 따라서 \\(p_1\\)과 \\(p_2\\) 사이의 각도(라디안)는 다음과 같이 주어진다.\n\\[\n\\theta_{12}=\\arccos(\\sin\\phi_1\\cdot \\sin\\phi_2+\\cos\\phi_1\\cdot \\cos\\phi_2\\cdot\\cos(|\\lambda_1-\\lambda_2|))\n\\]\n타원체 상의 두 지점 간의 호의 길이를 계산하는 것은 훨씬 더 복잡하다. Karney (2013)은 이와 관련하여 심도 있는 논의를 제공하였으며, PROJ 라이브러리의 일부인 GeographicLib에서 구현된 방법에 대한 자세한 설명을 제시한다.\n이 거리 측정 방식들이 실제로 서로 다른 값을 산출함을 보여주기 위해, 우리는 베를린과 파리 간의 거리를 계산했다. WGS84 타원체와 완전 구체에 각각에 대해 거리를 계산했는데, gc_는 대권거리를, str_은 지심좌표값을 이용한 직선거리를 나타낸다.\n\n\nUnits: [km]\n gc_ellipse str_ellipse   gc_sphere  str_sphere \n     879.70      879.00      877.46      876.77 \n\n\n\n2.2.3 한정 공간과 비한정 공간\n2차원 및 3차원 유클리드 공간(\\(R^2\\)와 \\(R^3\\))는 비한정 공간이다. 이 공간의 모든 선은 무한한 길이를 가지며, 면적이나 부피는 자연적인 상한이 없다. 이와는 대조적으로 구(\\(S^1\\)) 혹은 구체(\\(S^2\\))의 공간은 한정 공간이다. 무한히 많은 점이 있을 수는 있지만, 원의 길이와 면적, 구의 반지름, 면적 및 부피는 유한하다.\n이것은 사소하게 들릴 수 있지만, 공간데이터를 처리할 때 흥미로운 도전 과제로 이어진다. \\(R^2\\) 상의 폴리곤은 명확하게 내부와 외부를 가진다. \\(S^2\\) 공간인 구체 상에서 모든 폴리곤은 구체를 두 부분으로 나누며, 이 두 부분 중 어느 쪽을 내부로 간주하고 어느 쪽을 외부로 간주할지는 애매하며, 이는 탐색 방향(traversal direction)에 의해 정의되어야 한다(역자주: 탐색 방향은 보통 시계 방향과 반시계 방향으로 나누는데, 예를 들어, 삼각형의 변을 시계 방향으로 탐색하면 왼쪽에 있는 영역이 내부로 간주되고, 반시계 방향으로 탐색하면 오른쪽에 있는 영역이 내부로 간주된다.). 4장에서 \\(S^2\\) 지오메트리를 다룰 때의 결과에 대해 추가로 논의할 것이다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "02.html#구체-혹은-타원체-좌표계",
    "href": "02.html#구체-혹은-타원체-좌표계",
    "title": "2  좌표계",
    "section": "\n2.3 구체 혹은 타원체 좌표계",
    "text": "2.3 구체 혹은 타원체 좌표계\n3차원의 경우, 데카르트 좌표계는 \\((x,y,z)\\)로 주어지고, 극 좌표계는 \\((r,\\lambda,\\phi)\\)로 주어진다.\n\n\\(r\\)은 구체의 반지름이다.\n\\(\\lambda\\)는 경도로, \\((x,y)\\) 평면에서 양의 \\(x\\)축으로부터 반시계방향으로 측정된다.\n\\(\\phi\\)는 위도로, \\((x,y)\\) 평면과 해당 벡터가 이루는 각도이다.\n\n그림 2.2는 데카르트 지심 좌표계와 타원체 좌표계를 보여준다.\n\n\n\n\n\n\n\n\n\\(\\lambda\\)는 \\(-180^\\circ\\)에서 \\(180^\\circ\\) 사이의 값(혹은 \\(0^\\circ\\)에서 \\(360^\\circ\\) 사이의 값)을 갖고, \\(\\phi\\)는 \\(-90^\\circ\\)에서 \\(90^\\circ\\) 사이의 값을 갖는다. 타원체가 아니라 고정된 반지름 갖는 구체 상의 위치만을 상정할 경우 위의 \\(r\\)을 생략한 \\((\\lambda,\\phi)\\) 만으로도 모든 위치를 규정하기에 충분하다.\n이것은 단지 하나의 정의일 뿐이며, 예를 들어 위도 대신 해당 벡터와 \\(z\\) 축 사이의 각도인 극각을 측정할 수도 있다는 점에 유의해야 한다. 좌표값을 \\((\\phi,\\lambda)\\)의 형태로 나타내는 오랜 전통이 있지만 이 책에서는 경도-위도 형식(\\(\\lambda,\\phi\\))을 사용할 것이다. 그림 2.2에 표시된 지점은 각도값으로 구성된 \\((\\lambda,\\phi)\\) 혹은 타원체 좌표값을 가지며 도 단위로 주어진다.\n\n\nPOINT (60 47)\n\n\n지심좌표값은 미터 단위로 주어진다.\n\n\nPOINT Z (2178844 3773868 4641765)\n\n\n타원체 상의 지점에 대해서는 각도를 나타내는 두 가지 방법이 있다(그림 2.3). 하나는 타원체의 중심을 기준으로 측정된 각도(\\(\\psi\\)), 또는 해당 지점을 지나는 접선에 수직으로 측정된 각도(\\(\\phi\\))이다.\n\n\n\n\n\n\n\n그림 2.2: 타원체 상의 각도: 측지 위도(푸른색)와 지심 위도(붉은색)\n\n\n\n\n\n\n\n그림 2.1: 2차원 극 좌표계와 데카르트 좌표계\n그림 2.2: 타원체 상의 각도: 측지 위도(푸른색)와 지심 위도(붉은색)",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "02.html#crs",
    "href": "02.html#crs",
    "title": "2  좌표계",
    "section": "\n2.3 CRS",
    "text": "2.3 CRS\nLott(2015)를 따라 다음과 같은 개념 정의를 사용할 것이다(이탤릭체는 Lott의 정의를 그대로 옮겨 쓴 것이다)\n\n좌표계는 지점에 좌표를 할당하는 방법을 지정하는 수학적 규칙의 집합이다.\n데이텀은 좌표계의 원점, 축척, 방향을 정의하는 파라미터 또는 파라미터의 집합이다.\n측지데이텀은 2차원 또는 3차원 좌표계와 지구와의 관계를 설명하는 데이텀이다(역자주: 다시 말해, 지구에 부여된 2차원 또는 3차원 좌표계를 설명하는 데이텀이다).\nCRS(좌표참조계)는 특정한 데이텀에 의거해 특정한 객체에 부여된 좌표계이다. 측지데이텀과 수직데이텀의 경우, 객체는 지구이다(역자주: 측지데이텀은 지구 상의 위치를 규정하는 수평데이텀이고 수직데이텀은 말그대로 지표 상의 높이를 규정하는 데이텀이다).\n\n이 개념을 더 자세히 설명하는 읽기 쉬운 텍스트는 Iliffe and Lott(2008)이다.\n지구는 규칙적인 형태를 따르지 않는다. 지표 기복이 매우 불규칙적인 형상을 띤다는 것을 잘 알려져 있지만, 평균해수면과 관련하여 일정한 중력에 의해 형성된 표면인 지오이드(geoid) 또한 불규칙적이다. 지오이드에 대한 모델 중 가장 일반적으로 사용되는 것은 회전타원체로, 이는 두 개의 동일한 반단축을 가진 타원이다. 이런 회전타원체를 지구와 어떠한 방식으로 일치시킬 것인가가 데이텀을 규정한다. 그런데 타원체를 지구의 어떤 부분에 일치시킬지, 혹은 어떤 준거 지점을 사용하여 일치시킬지에 따라 타원체의 적합도는 다양할 수 있고, 이런 연유로 인해 다양한 데이텀이 존재할 수 있는 것이다. 어떤 데이텀은 특정한 지각판에 대한 적합도에 집중하며(ETRS89), 어떤 데이텀은 전세계의 평균적인 적합도를 지향한다(WGS84). 국지적인 적합도에 치중할수록 해당 지역에서의 근사 오류는 낮아지게 된다.\n위에서 제시된 정의를 살펴보면, 경도와 위도로 주어진 좌표값은 해당 데이텀이 주어질 경우에만 지구 좌표계로서의 의미를 부여받을 수 있고, 해석이 모호성이 사라질 수 있음을 함축하고 있다.\n특정한 투영법이 적용된 데이터는 반드시 특정한 참조타원체(데이텀)와 결부되어 있음을 주의해야 한다. 데이텀 전환 없이 투영법만 바꾸는 것을 좌표전환(coordinate conversion)이라고 하는데, 이 좌표변환은 해당 데이텀과 결부되어 있는 특정 타원체의 좌표값에 의거해 이루어진다. 이 좌표변환의 과정은 정보의 비손실적이며 가역적이다. 변환을 위한 파라미터와 함수식은 불변이다.\n새로운 데이텀에 의거해 좌표를 재계산하는 것을 좌표변환(coordinate transformation)이라고 한다. 좌표전환과 달리 좌표변환은 근사적으로 이루어진다. 왜냐하면 데이텀이 모델 적합의 결과이기 때문에 데이텀 간 변환 또한 적합된 모델이기 때문이다. 변환 함수도 경험적으로 얻어지는 것이며, 적합도와 정확성에 대한 설정을 달리하는 다양한 변환 경로가 가능할 수 있다.\n판구조론은 글로벌 데이텀을 위한 고정된 객체의 위치가 시간이 흐름에 따라 변할 수 있음을 우리들에게 알려준다. 이는 데이텀 간 좌표변환이 시간 의존적일 수 있음을 시사하는 것이다. 지진으로 인해 특정 지역의 좌표가 갑작스럽게 변화할 수 있다. 국지 데이텀을 특정한 지각판에 고정시킬 수도 있지만(ETRS89), 보다 역동적으로 변화시킬 수도 있다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "02.html#proj와-지도-정확도",
    "href": "02.html#proj와-지도-정확도",
    "title": "2  좌표계",
    "section": "\n2.4 PROJ와 지도 정확도",
    "text": "2.4 PROJ와 지도 정확도\n현재 오픈소스 지리공간 소프트웨어에서 활동하는 사람들 중 PROJ 이전의 시간을 기억하는 사람은 거의 없다. PROJ(Evenden 1990)는 1970년대에 포트란 프로젝트로 시작되어 1985년에 지도투영을 위한 C 라이브러리로 출시되었다. 이 라이브러리는 직접 투영 및 역 투영을 위한 명령줄 인터페이스를 제공하였으며, 소프트웨어와 연결하여 투영과 재투영을 곧바로 실행하는 것이 가능했다. 데이텀은 그냥 주어지는 것으로 간주되었으며 데이텀 변환은 허용되지 않았다.\n2000년대 초 PROJ는 PROJ.4가 되었는데, 불변의 버전 번호가 붙은 것이다. GPS의 대두 등 여러 요인으로 인해 데이터 변환에 대한 필요성이 증가하였고, PROJ.4는 기본적인 데이텀 지원 기능을 장착하게 되었다. PROJ는 CRS를 다음과 같은 형식으로 정의한다.\n+proj=utm +zone=33 +datum=WGS84 +units=m +no_defs\n“키=값”쌍은 + 기호로 시작하고 공백으로 구분된다. 이 형식은 PROJ 프로젝트가 수십 년 동안 4.x 버전으로 유지되었기 때문에 ’PROJ.4 문자열’로 알려지게 되었다. 다른 예를 들면 다음과 같다.\n+ellps=bessel +towgs84=565.4,50.3,465.6,-0.399,0.344,-1.877,4.072\n이 문자열은 해당 데이텀이 다른 타원체(Bessel)를 사용하며, 이 타원체를 WGS84(GPS때문에 널리 알려짐)로 변환하기 위해서는 7개(또는 3개)의 파라미터가 필요하다는 점을 잘 나타낸다.\nPROJ.4 외에 널리 사용되고 있는 투영법에 대한 데이터베이스가 구축되었는데, 그것들 중 가장 널리 알려진 것인 EPSG(European Petroleum Survey Group) 레지스트리이다. 국가지도제작기관은 자국의 CRS에 대한 +towgs84 파라미터(WGS84로 변환하기 위한 파라미터)에 대한 최선의 추정치를 계산 및 업데이트하여, EPSG 등록부를 통해 배포하였다. 일부 변환의 경우, 데이텀 그리드가 제공되었는데 PROJ.4의 일부로 배포되었다. 이러한 그리드는 결국 래스터 지도를 의미하는데, 데이텀 변환이 야기하는 경도, 위도, 또는 고도의 변화값을 모든 지점에 대해 미리 계산해 둔 것이다.\nPROJ.4에서는 모든 좌표변환이 WGS84로의 변환을 거쳐야 했다. 전혀 다른 데이텀을 가진 데이터를 재투영할 때도 WGS84로의 변환을 거쳐야 했다. 최대 100m의 오류는 비교적 큰 지역의 지도 제작 목적으로는 허용 가능했지만, 일부 응용 프로그램은 더 높은 정확도의 변환이 필요하다. 예를 들어, 정밀 농업, UAV(역자주: Unmanned Aerial Vehicle의 약자로 무인항공기로 번역될 수 있지만, 보통 드론을 지칭할 때 사용된다.) 비행 계획 또는 객체 추적이 있다.\n2018년, 성공적인 ‘GDAL 좌표계 공동 개발’ 이니셔티브 이후, 오픈소스 지리공간 소프트웨어 스택에서 이익을 얻는 여러 회사들이 PROJ에서 보다 현대적이고 진보된 좌표변환 시스템 개발을 지원했다. 몇 년 동안 PROJ.4는 5, 6, 7, 8, 9 버전을 거치며 발전하였고, 따라서 PROJ(또는 PR\\(\\phi\\)J)로 이름이 변경되었다.\n가장 주목할만한 변화에 다음의 것들이 있다.\n\n비록 PROJ.4 문자열이 새로운 CRS를 정의하는데 여전히 사용될 수 있지만, 모든 CRS를 포괄하기에 충분하지 않다는 점이 드러났다. 새로운 형식인 WKT-2(다음 섹션에서 설명됨)가 이를 대체한다.\n허브 데이텀으로서의 WGS84의 지위를 박탈한다. 좌표변환이 더 이상 특정 데이텀을 거칠 필요가 없다.\nCRS A에서 CRS B로 가는 여러 변환 또는 전환 경로(소위 파이프라인)가 가능하며, 정확도 정보만 제시된다면 등재될 수 있다. PROJ는 디폴트로 가장 정확한 경로를 사용하지만 사용자가 제어할 수 있다.\n변환 파이프라인은 축 교환 및 단위 변환을 포함하여 다수의 기본 변환 작업을 연결할 수 있다.\n데이텀 그리드는 라이브러리와 함께 배포되지 않고 CDN(content delivery network)에서 접근할 수 있다. PROJ는 이러한 그리드에 대한 네트워크 접근을 활성화하거나 비활성화할 수 있도록 하며, 실제로 필요한 그리드 섹션만 다운로드하여 사용자의 기기에 캐시로 저장하여 향후 사용할 수 있게 한다.\n에포케(epoche) 좌표변환, 즉 시간-의존적 좌표변환이 가능하다. 따라서 소스 및 타깃 시간을 포함하는 4차원 자표계에 대한 변환이 가능하다(역자주: 지구의 좌표계가 시간이 지남에 따라 변화해 왔으므로 특정 시대(에포케)에 의거한 변환임으로 하나의 정보로 포함시킬 수 있게 되었다는 점을 의미한다.).\n기등록 CRS를 가진 데이터셋의 경우는 SQLite 데이터베이스에서 관리된다.\n축 순서(경도, 위도)를 다르게 정의하는 것이 가능하다.\n\n많은 개선이 이루어졌으며, 변환의 정확도는 이제 1미터 이하일 수 있다. 흥미로운 점은 마지막 부분이다. 수십년 동안 타원체 좌표를 가진 공간데이터의 축 순서(경도, 위도)를 자명한 것으로 가정할 수 있었지만, 이제는 더 이상 그렇지 않다. 섹션 7.7.6에서 이를 처리하는 방법을 살펴볼 것이다.\n\n\n\n\n\n\n\n그림 2.4: 영국의 OSGB 1936(EPSG:4277)를 ETRS89(EPSG:4258)로 변환하는데 사용되는 수평 데이텀 그리드\n\n\n\n\n\n\n\n\n\n\n\n그림 2.5: 영국의 ETRS89(EPSG:4937를 ODN 고도(EPSG:5701)로 변환하는데 사용되는 수직 데이텀 그리드\n\n\n\n\n그림 2.4에 나타나 있는 수평 데이텀 그리드와 그림 2.5에 나타나 있는 수직 데이텀 그리드의 예는 cdn.proj.org로부터 다운로드 받았다. 데이텀 그리드는 픽셀별 정화도 값을 포함할 수 있다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "02.html#wkt-2",
    "href": "02.html#wkt-2",
    "title": "2  좌표계",
    "section": "\n2.5 WKT-2",
    "text": "2.5 WKT-2\nLott (2015)는 CRS의 인코딩과 CRS 간의 변환을 WKT(well-known text) 통해 나타내는 표준을 정리한 바 있다. 이 표준(및 포맷)을 비공식적으로 WKT-2라고 부른다. 앞에서 언급했듯이, GDAL과 PROJ는 이 표준을 지원한다. 예로서 특정 CRS(EPSG:4326)은 WKT-2로 다음과 같이 표시된다.\nGEOGCRS[\"WGS 84\",\n    ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n        MEMBER[\"World Geodetic System 1984 (Transit)\"],\n        MEMBER[\"World Geodetic System 1984 (G730)\"],\n        MEMBER[\"World Geodetic System 1984 (G873)\"],\n        MEMBER[\"World Geodetic System 1984 (G1150)\"],\n        MEMBER[\"World Geodetic System 1984 (G1674)\"],\n        MEMBER[\"World Geodetic System 1984 (G1762)\"],\n        MEMBER[\"World Geodetic System 1984 (G2139)\"],\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]],\n        ENSEMBLEACCURACY[2.0]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"geodetic latitude (Lat)\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"geodetic longitude (Lon)\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    USAGE[\n        SCOPE[\"Horizontal component of 3D system.\"],\n        AREA[\"World.\"],\n        BBOX[-90,-180,90,180]],\n    ID[\"EPSG\",4326]]\n이 예시는 축 순서가 위도, 경도로 설정된 좌표계를 보여주고 있다. 물론 실제로 사용되고 있는 대부분의 좌표계는 축 순서가 경도, 위도이다. WGS84 타원체에 대한 앙상블(ENSEMBLE)은 다양한 업데이트를 나열하고 있다. 이 앙상블 중 어떤 것를 사용하는냐에 따라 수 미터의 오차가 발생할 수 있다. OGS:CRS84는 축 순서를 경도, 위도의 순서를 명확히 하였기 때문에 GRS84에 대한 대안으로 권장된다. 그러나 데이텀 앙상믈 문제는 해결하지 못한다.\nPROJ의 역사와 최근 변화에 대한 자세한 소개는 Knudsen and Evers(2017), Evers and Knudsen(2017)의 연구를 토대로 정리한 Bivand(2020)에 잘 나타나 있다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "02.html#연습문제",
    "href": "02.html#연습문제",
    "title": "2  좌표계",
    "section": "\n2.6 연습문제",
    "text": "2.6 연습문제\nR을 활용하여 아래의 연습문제를 풀되 패키지의 사용은 금지이다. 적절한 함수를 찾도록 노력하라.\n\n자연적 원점 0을 갖지 않는 지리적 측도 세가지를 나열하라.\n다음의 \\((x,y)\\) 좌표, \\((10,2)\\), \\((-10,-2)\\), \\((10,-2)\\), \\((0,10)\\)을 극 좌표로 전환하라.\n다음의 \\((r,\\phi)\\) 좌표, \\((10,45^\\circ)\\), \\((0,100^\\circ)\\), \\((5,359^\\circ)\\)를 데카르트 좌표로 전환하라.\n지구를 반지름이 6371km인 완전한 구체라고 가정하고, 다음의 두 지점 간의 대권거리를 구하라. \\((10,10)\\)과 \\((11,10)\\), \\((10,80)\\)과 \\((11,80)\\), \\((10,10)\\)과 \\((10,11)\\), \\((10,80)\\)과 \\((10,81)\\)(단위: 각도)의 대권거리는 몇 도인가?\n\n\n\n\n그림 2.1: 2차원 극 좌표계와 데카르트 좌표계\n그림 2.2: 세 개의 거리로 표현되는 데카르트 지심 좌표계(왼편)와 두 개의 각도와 하나의 타원체고로 표현되는 타원체 좌표계(오른편)\n그림 2.3: 타원체 상의 각도: 측지 위도(푸른색)와 지심 위도(붉은색)\n그림 2.4: 영국의 OSGB 1936(EPSG:4277)를 ETRS89(EPSG:4258)로 변환하는데 사용되는 수평 데이텀 그리드\n그림 2.5: 영국의 ETRS89(EPSG:4937를 ODN 고도(EPSG:5701)로 변환하는데 사용되는 수직 데이텀 그리드",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>좌표계</span>"
    ]
  },
  {
    "objectID": "03.html#심플-피쳐-지오메트리",
    "href": "03.html#심플-피쳐-지오메트리",
    "title": "3  지오메트리",
    "section": "",
    "text": "클래스 위계\n오퍼레이션의 집합\n이항 엔코딩과 텍스트 엔코딩\n\n\n\n3.1.1 7개의 대표 지오메트리\n단일(single) 피처를 나타내기 위해 사용되는 가장 일반적인 심플 피처 지오메트리 유형은 다음과 같다.\n\n\n\n\n\n\n유형\n설명\n\n\n\nPOINT\n단일 포인트 지오메트리\n\n\nMULTIPOINT\n포인트의 집합\n\n\nLINESTRING\n단일 라인스트링(두개 이상의 포인트가 직선으로 연결되어 있음)\n\n\nMULTILINESTRING\n라인스트링의 집합\n\n\nPOLYGON\n내부 링(구멍을 의미)을 가질 수 있는 외부 링\n\n\nMULTIPOLYGON\n폴리곤의 집합\n\n\nGEOMETRYCOLLECTION\n위에서 언급된 모든 지오메트리의 집합\n\n\n\n\n\n\n\n\n\n\n그림 3.1: 심플 피처 지오메트리의 주요 유형\n\n\n\n\n그림 3.1은 이러한 기본 지오메트리 유형의 예를 보여준다. 지오메트리를 표현한 사람이 읽을 수 있는 WKT 표기법은 다음과 같다.\nPOINT (0 1)\nMULTIPOINT ((1 1), (2 2), (4 1), (2 3), (1 4))\nLINESTRING (1 1, 5 5, 5 6, 4 6, 3 4, 2 3)\nMULTILINESTRING ((1 1, 5 5, 5 6, 4 6, 3 4, 2 3), (3 0, 4 1, 2 1))\nPOLYGON ((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),\n    (2 2, 3 3, 4 3, 4 2, 2 2))\nMULTIPOLYGON (((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),\n    (2 2, 3 3, 4 3, 4 2, 2 2)), ((3 7, 4 7, 5 8, 3 9, 2 8, 3 7)))\nGEOMETRYCOLLECTION (\n    POLYGON ((2 1, 3 1, 5 2, 6 3, 5 3, 4 4, 3 4, 1 3, 2 1),\n      (2 2 , 3 3, 4 3, 4 2, 2 2)),\n    LINESTRING (1 6, 5 10, 5 11, 4 11, 3 9, 2 8),\n    POINT (2 5),\n    POINT (5 4)\n)\n좌표는 공백으로 구분되고, 포인트는 쉼표로 구분된다. 집합은 괄호로 묶여 있으며, 쉼표로 구분된다. 폴리곤은 외부 링과 (만일 있다면) 내부 링(구멍을 나타냄)으로 구성된다.\n지오메트리의 개별 포인트는 최소한 두 개의 좌표를 포함하며, 이 좌표는 x와 y 순서로 나열된다. 이 좌표가 타원체 좌표를 나타내는 경우, x는 일반적으로 경도를, y는 위도를 의미하지만, 경우에 따라 위도와 경도의 순서로 나열될 수도 있다(섹션 2.4 및 섹션 7.7.6 참조).\n\n3.1.2 심플 지오메트리, 타당한 지오메트리, 링 디렉션\n라인리스팅은 자기 교차하지 않을 때 심플이라고 부를 수 있다.\n\n\nLINESTRING (0 0, 1 1, 2 2, 0 2, 1 1, 2 0)\n\n\n\n\nis_simple \n    FALSE \n\n\n타당한 폴리곤과 멀티폴리곤은 다음의 모든 프로프티를 보유한다.\n\n폴리곤 링은 닫혀있다(첫번째 포인트와 마지막 포인트는 동일하다)\n폴리곤 구멍(내부 링)은 외부 링의 안쪽에 있다.\n폴리곤 내부 링은 외부 링과 한 지점에서 만날 수는 있지만 라인을 공유할 수는 없다.\n폴리곤 링은 자신의 경로를 반복하지 않는다.\n멀티폴리곤에서 외부 링은 다른 외부 링과 한 지점에서 만날 수는 있지만 라인을 공유할 수는 없다.\n\n이것들 어느 하나라도 만족시키지 못한다면 해당 지오메트리는 타당하지 않다. 타당하지 않는 지오메트리는 일반적으로 오퍼레이션 과정에서 오류를 발생시키지만, 보통 사전에 타당한 지오메트리로 수정된다.\n또 다른 규칙은 폴리곤의 외부 링은 반시계 방향으로 감겨야 하며, 구멍은 시계 방향으로 감겨야 한다는 것이다. 그러나 이러한 규칙을 따르지 않는 폴리곤도 여전히 타당한 것으로 간주된다. 이러한 ‘시계 방향’ 개념은 구체에서의 그리 유용하지 않다. 예를 들어, 적도를 폴리곤으로 간주할 경우, 북반구와 남반구 중 어느 쪽이 ’내부’라고 할 수 있는가? 여기서 채택된 규칙은 폴리곤을 변을 시계 방향으로 탐색할 때 왼쪽에 있는 영역을 폴리곤의 내부로 간주하는 것이다(7.3절 참조).\n\n3.1.3 Z 좌표와 M 좌표\n심플 피처 지오메트리의 단일 포인트(버텍스)는 X 좌표와 Y 좌표 외에 다음을 가질 수 있다.\n\nZ 좌표: 고도\nM 좌표: 측정치\n\nM 속성이 버텍스의 프로퍼티라는 점을 염두에 두면 M 좌표는 유용하게 사용될 수 있을 것으로 보인다. 예를 들어, LINESTRING을 통해 일종의 경로 데이터를 엔코딩한다고 하면, 개별 버텍스에 시간 속성을 할당할 수 있다. 그러나 경로가 자기-교차하게 되면 비타당 혹은 비심플(non-simple)이 된다. 자기-교차성을 검토하기 위해 X 좌표와 Y 좌표만을 고려할 때는 드러나지 않는다.\nZ와 M은 자주 사용되지 않으며, 이를 유용하게 활용할 수 있는 소프트웨어 지원도 (아직) 드물다. 그래도 Z와 M의 WKT 표현은 비교적 쉽게 이해할 수 있다.\n\n\nPOINT Z (1 3 2)\n\n\n\n\nPOINT M (1 3 2)\n\n\n\n\nLINESTRING ZM (3 1 2 4, 4 4 2 2)\n\n\n\n3.1.4 엠프티 지오메트리\n피쳐 지오메트리 프레임워크에서 매우 중요한 개념이 엠프티(empty) 지오메트리이다. 엠프티 지오메트리는 기하학적 오퍼레이션(3.2절)을 실행할 때 자연스럽게 생성된다. 예를 들어 POINT (0 0)과 POINT (1 1)의 인터섹션 여부를 검토한다고 하자.\n\n\nGEOMETRYCOLLECTION EMPTY\n\n\n두 포인트는 교차하지 않으므로 엠프티 집합이 도출된다. 엠프티 포인트를 비어있지 않은 지오메트리와 결합하면(합집합을 구하면) 엠프티 포인트는 소실된다.\n모든 지오메트리 유형은 엠프티 지오메트리를 나타내는 특정한 값을 가지고 있다.\n\n\nPOINT EMPTY\n\n\n\n\nLINESTRING M EMPTY\n\n\n엠프티 집합이 생성된다는 점에서는 동일하고 단지 디멘션만 다를 뿐이다(3.2절 참조).\n\n3.1.5 10개의 부수적인 지오메트리\n다음의 10가지 지오메트리는 매우 드물게 사용되지만, 사용 빈도가 증가하는 경향이 있다.\n\n\n\n\n\n\n유형\n설명\n\n\n\nCIRCULARSTRING\n서큘러스트링은 기본적인 곡선 유형으로 직선 유형의 LINESTRING과 유사하다. 단일 세그먼트는 세 점이 필요하며, 시작점과 끝점(첫 번째와 세 번째 점) 및 호 상의 다른 점이 필요하다. 예외는 닫힌 원의 경우로, 이 경우 시작점과 끝점이 동일하다. 이 경우 두 번째 점은 반드시 호의 중심, 즉 원의 반대편이어야 한다. 호를 연결하려면 이전 호의 마지막 점이 다음 호의 첫 번째 점이 되며, 이는 LINESTRING에서도 동일하다. 따라서 타당한 서큘러 문자열은 1보다 큰 홀수 개의 점을 가져야 한다.\n\n\nCOMPOUNDCURVE\n컴파운트커브는 곡선(서큘러) 세그먼트와 선형 세그먼트를 모두 포함하는 단일 연속 곡선이다. 구성 요소를 잘 갖추고 있어야 하며, 모든 구성 요소의 끝점(마지막을 제외하고)은 다음 구성 요소의 시작점과 일치해야 한다.\n\n\nCURVEPOLYGON\n커브폴리곤 속에 컴파운트커브가 포함된 예: CURVEPOLYGON( COMPOUNDCURVE( CIRCULARSTRING(0 0,2 0, 2 1, 2 3, 4 3),(4 3, 4 5, 1 4, 0 0)), CIRCULARSTRING(1.7 1, 1.4 0.4, 1.6 0.4, 1.6 0.5, 1.7 1))\n\n\n\nMULTICURVE\n멀티커브는 곡선으로 구성된 1차원 지오메트리 컬렉션이다. 이 컬렉션은 라인 문자열, 서큘러 문자열 또는 컴파운드 문자열을 포함할 수 있다.\n\n\nMULTISURFACE\n멀티서피스는 동일한 CRS를 사용하는 서피스로 구성된 2차원 지오메트리 컬렉션이다.\n\n\nCURVE\n커브는 일반적으로 몇 개의 점의 연결로 정의되는 1차원 지오메트리 객체이며, 점들 간의 인터폴레이션 형태에 따라 커브의 하위 유형이 정의된다.\n\n\nSURFACE\n서피스는 2차원 지오메트리 객체이다.\n\n\nPOLYHEDRALSURFACE\n폴리헤드럴서피스는 공통 경계 세그먼트를 공유하는 연속적인 폴리곤의 컬렉션이다.\n\n\nTIN\n불규칙삼각망(triangulated irregular network)은 오직 삼각형으로만 구성된 폴리헤드럴서피스이다.\n\n\nTRIANGLE\n트라이앵글은 세 개의 비공선적(non-collinear) 버텍스로 구성된(역자주: 세 점이 일직선 상에 놓이지 않음을 의미한다), 내부 경계가 없는 폴리곤이다.\n\n\n\nCIRCULARSTRING, COMPOUNDCURVE, CURVEPOLYGON은 SFA 표준에 언급되지 않지만 SQL-MM 파트3 표준에는 포함되어 있다. 위 표의 설명 부분은 PostGIS 매뉴얼에서 그대로 가져온 것이다.\n\n3.1.6 텍스트 엔코딩과 바이너리 엔코딩\n심플 피처 표준에는 도 가지 엔코딩 방식이 포함되어 있다. 하나는 텍스트 인코딩이고 다른 하나는 바이너리 인코딩이다. 위에서 사용된 KWT는 인간-해독가능(human-readable)이고, KWB(well-known binary) 인코딩은 기계-해동가능(machine-readable)이다. WKB 인코딩은 정보 손실이 없으며 일반적인 텍스트 인코딩(및 디코딩)보다 작업 속도가 빠르다. 이는 R 패키지 sf와 GDAL, GEOS, liblwgeom, s2geometry 라이브러리 간의 모든 통신에서 사용된다(그림 1.7).",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "03.html#지오메트리에-적용되는-오퍼레이션",
    "href": "03.html#지오메트리에-적용되는-오퍼레이션",
    "title": "3  지오메트리",
    "section": "\n3.2 지오메트리에 적용되는 오퍼레이션",
    "text": "3.2 지오메트리에 적용되는 오퍼레이션\n심플 피처 지오메트리의 프로퍼티를 추출하는 것이 가능하며, 심플 피처 지오메트리의 결합을 통해 새로운 지오메트리가 생성된 경우, 그것의 프로퍼티를 추출하는 것 역시 가능하다. 이 섹션에서는 기하학적 프로퍼티에 전적으로 초점을 맞춘 오퍼레이션에 대해서만 간략하게 다룬다. 5장에서는 비기하학적 피처 속성 분석에 초점을 맞춘다. 이 섹션의 일부 내용은 Pebesma (2018)로부터 가져온 것이다.\n기하학적 프로퍼티에 대한 오퍼레이션을 투입과 산출에 의거해 분류하는 것이 가능하다. 우선 산출의 관점에서, 다음과 같이 구분할 수 있다.\n\n프레디케이트(predicate): 특정 프로퍼티가 TRUE임을 주장하는 논리값\n측정치(measure): 양(수치, 측정 단위가 있을 수 있음)\n변형(transformation): 새롭게 생성된 지오메트리\n\n오퍼레이션이 어떤 지오메트리에 적용되느냐에 따라 다음과 같이 분류하는 것이 가능하다.\n\n유너리(unary)단일 지오메트리에 적용\n바이너리(binary): 지오메트리의 쌍에 적용\n에너리(n-ary): 지오메트리의 집합에 적용\n\n\n3.2.1 유너리 프리디케이트: 단항 조건식(unary predicate)\n유너리 프리디케이트는 하나의 지오메트리의 하나의 프로퍼티를 설명한다. is_simple, is_valid, is_empty와 같는 프리디케이트는 각각 지오메트리가 심플한지, 타당한지, 엠프티한지의 여부에 대한 논리값을 반환한다. is_longlat 프리디케이트는 주어진 CRS가 경위도 좌표계에 기반하고 있는지 평면 좌표계에 기반하고 있는지의 여부를 반환한다. is(geometry, class)는 지오메트리가 특정한 클래스에 속하는지의 여부를 확인한다.\n\n3.2.2 바이너리 프리디케이트와 DE-9IM: 이항 조건식(binary predicate)과 DE-9IM\nDE-9IM(Dimensionally Extended Nine-Intersection Model)(Clementini, Di Felice, and Oosterom 1993; Egenhofer and Franzosa 1991)은 2차원 공간(\\(R^2\\))에서 두 지오메트리간의 정성적 관계를 설명하는 모델이다. 모든 지오메트리는 디멘션 값을 가진다.\n\n포인트는 0\n라인 지오메트리는 1\n폴리곤 지오메트리는 2\n엠프티 지오메트리는 F(거짓)\n\n모든 지오메트리는 내부(I), 경계(B), 외부(E)를 가지며, 이것들이 어떤 역할은 하는지는 폴리곤의 경우에 보다 명확히 드러난다.\n\n라인의 경계는 종점에 의해 형성되고, 선상의 모든 비종점이 내부를 구성한다.\n포인트는 0차원의 내부를 가지지만, 경계는 없다.\n\n\n\n\n\n\n\n\n그림 3.2: DE-9IM: 폴리곤의 내부, 경계, 외부(행)와 라인스트링의 내부, 경계, 외부(열) 간의 인터섹션\n\n\n\n\n그림 3.2는 폴리곤과 라인스트링의 I, B 및 E 간의 인터섹션을 빨간색으로 표시한 것이다. 개별 그래프의 제목에 인터섹션의 결과 도출되는 디멘션(0, 1, 2, 또는 F)이 표시되어 있다. 폴리곤 지오메트리와 라인 지오메트리의 관계는 바로 이러한 디멘션의 연속(concatenation)이다.\n\n\n     [,1]       \n[1,] \"1020F1102\"\n\n\n첫 세 문자는 첫 번째 지오메트리(폴리곤)의 내부와 관련이 있다. 그림 3.2에는 첫 번째 지오메트리가 행에 배열되어 있다. 더 나아가 지오메트리의 쌍에 대해 마스크(mask) 문자열로 표현된 특정한 조건의 만족 여부도 질의할 수 있다. 예를 들어, 문자열 \"0******\"는 두 번째 지오메트리가 첫 번째 지오메트리의 내부와 하나 이상의 경계 점을 공유할 때 TRUE로 평가된다. 여기서 기호 *는 디멘션(0, 1, 2 또는 F)을 의미하는 것으로 네 개 중 어는 것도 올 수 있다. 마스크 문자열 \"T********\"은 내부가 서로 교차하는 지오메트리 쌍을 찾아내느데, 여기서 기호 T는 차원 디멘션이 0, 1, 2이면서 비엠프티 인터섹션인 경우를 의미한다.\n더 나아가 바이너리 프리디케이트는 DE-9IM에서 규정된 정의를 활용함으로써 일반 언어 동사로 표현될 수 있다. 예를 들어, 프리디케이트 equals는 관계 \"T*F**FFF*\"와 동일하다. 어떤 두 지오메트리가 이러한 관계를 만족한다면, 그 둘은 (위상적으로)는 동일하지만, 노드의 순서가 다를 수 있다.\n바이너리 프리디케이트를 나열하면 다음과 같다.\n\n\n\n\n\n\n\n프리디케이트\n의미\n역프리디케이트\n\n\n\ncontains\nA 포인트 어느 것도 B의 외부에 있지 않다.\nwithin\n\n\ncontains_properly\nA는 B를 포함하며, B의 어떤 포인트도 A의 경계 상에 있지 않다.\n\n\n\ncovers\nB의 어떤 포인트도 A의 외부에 있지 않다.\ncovered_by\n\n\ncovered_by\ncovers의 반대\n\n\n\ncrosses\nA와 B는 일부 내부 포인트를 공유하지만 모든 포인트를 공유하는 것은 아니다.\n\n\n\ndisjoint\nA와 B는 어떤 포인트도 서로 공유하지 않는다.\nintersects\n\n\nequals\nA와 B는 위상적으로 동일하다. 노드 순서나 노드 수가 다를 수 있으며, A가 B를 포함하고 A가 B의 내부에 있는 것과 동일하다.\n\n\n\nequals_exact\nA와 B는 기하학적으로 동일하며, 노드 순서도 동일하다.\n\n\n\nintersects\nA와 B가 완전 분리의 관계를 가지지 않는다.\ndisjoint\n\n\nis_within_distance\nA가 주어진 거리보다 B에 더 가깝게 위치해 있다.\n\n\n\nwithin\nB의 어떤 포인트도 A의 외부에 있지 않다.\ncontains\n\n\ntouches\nA와 B는 최소한 한 개의 경계 포인트를 공유한다. 내부 포인트를 공유하는 것은 아니다.\n\n\n\noverlaps\nA와 B가 다수의 포인트를 공유한다. 디멘션은 A와 B의 디멘션과 동일하다.\n\n\n\nrelated\nA와 B가 주어진 마스크 패턴을 준수하는지의 여부를 반환한다.\n\n\n\n\n위키피디어의 DE-9IM 페이지를 가면, 개별 동사에 해당하는 relate 마스크 패턴을 확인할 수 있다. 왜냐하면 covers와 contains와 같은 동사(그 역도 마찬가지)는 그 의미를 직관적으로 파악하기 어려울 때가 있다.\n\n만일 A가 B를 포함한다면, B는 A의 외부나 경계와 어떠한 공유 포인트도 없다.\n만일 A가 B를 덮으면, B는 A의 외부와 어떠한 공유 포인트도 없다.\n\n3.2.3 유너리 측도\n유너리 측도는 지오메트리의 퍼로퍼티를 설명하는 측정값이나 양을 반환한다.\n\n\n\n\n\n\n측도\n반환값\n\n\n\ndimension\n포인트는 0, 라인은 1, 폴리곤은 2, 엠프티 지오메트리에 대해서는 NA\n\n\narea\n지오메트리의 면적\n\n\nlength\n라인 지오메트리의 길이\n\n\n\n3.2.4 바이너리 측도\ndistance는 지오메트리 간의 거리를 반환한다. 질적 측도로서의 (마스크가 없는) relate는 관계 패턴을 제공한다. 두 지오메트리간의 기하학적 관련성에 대한 설명은 섹션 3.2.2에 나타나 있다.\n\n3.2.5 유너리 변환자\n유너리 변환자는 지오메트리별로 작동하며, 각 지오메트리에 대해 새로운 지오메트리를 반환한다.\n\n\n\n\n\n\n변환자\n반환 지오메트리\n\n\n\ncentroid\n투입 지오메트리의 센트로이드로 구성된 POINT 유형의 지오메트리\n\n\nbuffer\n투입 지오메트리보다 더 큰(혹은 더 작은) 지오메트리: 버퍼 사이즈에 따라 산출 지오메트리의 크기가 달라짐\n\n\njitter\n이변량 균등 분포를 이용하여 조금 전위된 지오메트리\n\n\nwrap_dateline\n날짜 변경선(데이라인)을 더 이상 덮거나 교차하지 않는 조각으로 분할된 지오메트리\n\n\nboundary\n투입 지오메트리의 경계를 가진 지오메트리\n\n\nconvex_hull\n투입 지오메트리의 컨벡스헐을 가진 지오메트리(그림 3.3)\n\n\nline_merge\nMULTILINESTRING 내의 LINESTRING 요소들을 결합하여 더 긴 LINESTRING을 형성한 지오메트리\n\n\nmake_valid\n타당하게 교정된 지오메트리\n\n\nnode\n노드가 없는 교차점에 노드를 추가한 라인 지오메트리. 개별적인 라인 지오메트리에만 적용됨\n\n\npoint_on_surface\n서피스에 임의의 포인트를 가진 지오메트리\n\n\npolygonize\n폐쇄 링을 형성하는 라인으로부터 생성된 폴리곤 지오메트리\n\n\nsegmentize\n주어진 밀도 또는 최소 거리를 만족하는 노드로 구성된 라인 지오메트리\n\n\nsimplify\n버텍스/노드를 제거함으로써 단순화된 라인 혹은 폴리곤 지오메트리\n\n\nsplit\n라인스트링에 의해 분할된 지오메트리\n\n\ntransform\n새로운 CRS로 변형 혹은 전환된 지오메트리(2장)\n\n\ntriangulate\n들로네(Delauney) 삼각망으로 구성된 지오메트리(그림 3.3)\n\n\nvoronoi\n투입 지오메트리로부터 형성된 보로노이(Voronoi) 테셀레이션(그림 3.3)\n\n\nzm\nZ 좌표 및 M 좌표가 수정된(일부 좌표의 삭제 혹은 새로운 좌표의 첨가) 지오메트리\n\n\ncollection_extract\n특정 유형의 GEOMETRYCOLLECTION으로부터 일부를 추출한 지오메트리\n\n\ncast\n유형이 전환된 지오메트리\n\n\n+\n주어진 벡터만큼 전위된 지오메트리\n\n\n*\n스칼라 또는 매트릭스가 곱해진 지오메트리\n\n\n\n\n\n\n\n\n\n\n그림 3.3: 포인트의 집합, 왼편은 컨벡스 헐(빨간색), 가운데는 보로노이 폴리곤, 오른편은 들로네 삼각망\n\n\n\n\n\n3.2.6 바이너리 변환자\n바이러니 변환자는 지오메트리 쌍에 적용되어 새로운 지오메트리를 생성하는 함수이다. 다음과 같은 것이 있다.\n\n\n\n\n\n\n\n함수\n반환 지오메트리\n인픽스 오퍼레이터\n\n\n\nintersection\n두 지오메트리 겹치는 부분에 대한 지오메트리\n&\n\n\nunion\n두 지오메트리를 결합한 지오메트리로, 내부 경계를 제거하고, 중복되는 포인트, 노드, 또는 라인을 삭제한다.\n|\n\n\ndifference\n두 번째 지오메트리와 중복되는 부분을 제거한 첫 번째 지오메트리\n/\n\n\nsym_difference\n중복되는 부분을 제거한 이후에 두 지오메트리를 결한한 지오메트리로 intersection의 반대\n%/%\n\n\n\n3.2.7 에너리 변환자\n에너리 변환자는 지오메트리의 집합에 작용한다. union을 적용하면 모든 지오메트리의 결합 결과를 얻을 수 있다. 이런 방식이 아니라면, 동일한 차원을 가진 지오메트리 집합은 MULTI-유형 지오메트리로 결합하거나 GEOMETRYCOLLECTION으로 결합할 수 있다. 이 경우, union을 적용하지 않았기 때문에 두 폴리곤 링이 공유 경계선을 가질 때와 같이 타당하지 않은 지오메트리가 생성될 수 있다.\n에너리 intersection과 difference의 경우 형식적으로는 단일 아규먼트를 취하지만 모든 쌍, 세 쌍, 네 쌍 등에 대해 순차적으로 작동한다. 그림 3.4를 살펴보자. 세 개의 상자가 모두 겹치는 영역을 어떻게 식별할 수 있을까? 바이너리 intersection을 사용하면 모든 쌍(1-1, 1-2, 1-3, 2-1, 2-2, 2-3, 3-1, 3-2, 3-3)에 대한 intersection을 얻을 수 있다. 하지만 두 개 이상의 지오메트리가 교차하는 영역을 식별할 수는 없다. 그림 3.4의 오른쪽 그림은 에너리 intersection을 보여주는데, 한 개, 두 개, 또는 더 많은 지오메트리의 교차를 통해 생성된 7개의 겹치지 않는 고유한 지오메트리를 확인할 수 있다.\n\n\n\n\n\n\n\n\n유사하게, 집합 \\(\\{s_1,s_2,s_3,...\\}\\)에 에너리 difference를 적용하여 \\(\\{s_1,s_2-s_1,s_3-s_2-s_1,...\\}\\)를 생성할 수 있다. 결과가 그림 3.5에 나타나 있는데, 왼편에는 원래 집합을 보여주고 있고, 오른편에는 투입 지오메트리의 순서를 바꾼 후의 집합을 보여주고 있다. 이는 결과가 입력 지오메트리의 순서에 의존한다는 사실을 명확히 하기 위함이다. 결과로 얻어진 지오메트리는 서로 겹치지 않는다.\n\n\n\n\n\n\n\n그림 3.4: 박스를 서로다른 순서에 따라 differece를 적용한 결과: 왼쪽은 원리 순서이고 오른쪽은 반대 순서",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "03.html#정밀도",
    "href": "03.html#정밀도",
    "title": "3  지오메트리",
    "section": "\n3.3 정밀도",
    "text": "3.3 정밀도\n기하학적 오퍼레이션, 예를 들어 특정 점이 선 위에 있는지 여부를 찾는 오퍼레이션은 R에서 사용되는 8바이트 더블과 같은 배정밀도 부동소수점 수로 좌표가 표현될 때 실패할 수 있다. 자주 선택되는 해결책은 연산 전에 좌표의 정밀도를 제한하는 것이다. 이를 위해 정밀도 모델이 채택된다. 가장 일반적인 방법은 하나의 계수 \\(p\\)를 선택하고, 원래 좌표 \\(c\\)에에서 반올림된 좌표 \\(c'\\)를 계산하는 것이다.\n\\[\nc'=\\text {round} (p\\cdot c)/p\n\\]\n이러한 종류의 반올림은 좌표를 간격이 \\(1/p\\) 인 규칙적인 그리드 상의 점으로 변환하며, 이는 기하학적 연산에 유익하다. 물론, 이러한 반올림은 면적이나 거리와 같은 모든 계산에도 영향을 미치며, 유효한 기하를 무효하게 만들 수 있다. 어떤 정밀도 값이 특정 애플리케이션에 가장 적합한지는 일반적으로 상식과 시행착오를 결합해 결정된다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "03.html#커버리지-테셀레이션과-래스터",
    "href": "03.html#커버리지-테셀레이션과-래스터",
    "title": "3  지오메트리",
    "section": "\n3.4 커버리지: 테셀레이션과 래스터",
    "text": "3.4 커버리지: 테셀레이션과 래스터\nOGC(Open Geospatial Consortium, 오픈지리공간컨소시움)는 커버리지(coverage)를 “시공간적 도메인 내의 임의의 직접 위치에 대해 그 범위에서 값을 반환하는 함수로 작용하는 피처”라고 정의한다 (Baumann, Hirschorn, and Masó 2017). 함수가 존재한다는 것은 시공간적 도메인 내의 모든 “포인트”, 즉 특정한 지점과 특정한 시점의 모든 조합마다 범위에 대해 단일 값을 우리가 얻을 수 있다는 것을 의미한다. 이는 시공간적 현상에서 매우 일반적인 상황이며, 몇 가지 예를 들 수 있다.\n\n경계 분쟁을 제외하고 얘기한다면, 특정 시점의 특정 지역 내 모든 지점(도메인)은 단일 행정 단위(범위)에 속한다.\n특정 시점의 특정 지역 내 모든 지점(도메인)은 특정한 토지피복 유형(범위)을 갖는다.\n특정 지역(도메인)의 모든 지점은 단일한 고도값(범위)을 가지며, 이는 주어진 평균 해수면을 기준으로 측정될 수 있다.\n3차원 기체의 모든 시공간적 지점(도메인)은 온도(범위)에 대해 단일 값을 갖는다.\n\n여기서 주의해야 할 점은 관찰이나 측정은 항상 시간과 공간을 소요하기 때문에, 측정된 값은 항상 시공간적 부피(volume)에 대한 평균값일 수 밖에 없다는 점이다. 따라서 범위 변수를 무부피의 “포인트”에 대해 측정하는 경우는 극히 드물다. 그러나 많은 실제 사례에서 측정된 부피는 “포인트”로 간주될 만큼 충분히 작기는 하다. 토지 피복 유형과 같은 변수의 경우, 구별되는 유형이 측정된 면적 단위와 관련하여 의미가 있도록 부피를 선택해야 한다.\n주어진 예의 처음 두 가지에서 범위 변수는 범주형이며, 마지막 두 가지에서 범위 변수는 연속형이다. 범주형 범위 변수의 경우, 넓은 지역이 동일한 범위 값을 가지면, 이러한 데이터를 효율적으로 표현하는 방법은 동일한 값을 가진 지역의 경계를 저장하는 것이다. 예를 들어, 국가 경계와 같은 경계가 이에 해당한다. 이는 단순 피처 지오메트리(폴리곤 또는 멀티폴리곤)을 사용하여 수행할 수 있지만, 이로 인해 몇 가지 도전 과제가 발생할 수 있다.\n\n단순 피처 폴리곤들이 서로 겹치지 않고 틈새도 없어야 하지만, 이러한 점이 반드시 보장된다고 말하기 어렵다.\n단순 피처는 인접한 두 폴리곤의 경계 상에 놓인 포인트를 하나의 폴리곤에만 할당하지 못하는데, 이는 커버리지로서의 해석과 충돌한다.\n\n\n3.4.1 토폴로지 모델\n폴리곤 커버리지의 겹침과 틈새가 없도록 보장된 데이터 모델을 토폴로지 모델(topological model)이라고 하는데, GRASS GIS나 ArcGIS와 같은 지리정보시스템(GIS)에서 그 예를 찾을 수 있다. 토폴로지 모델은 폴리곤 경계를 한 번만 저장하고, 경계의 양쪽에 어떤 폴리곤이 있는지를 등록한다.\n토폴로지 모델에서 동일한 범위 값을 가진 지역들에 대해 (멀티)폴리곤 집합을 도출하는 것은 간단하다. 폴리곤의 세트로부터 토폴로지를 재정의하는 역의 과정을 수행하기 위해서는 오류에 대한 임계값을 설정해야하고 겹침과 틈새를 처리하는 특정한 방법을 고려해야 한다.\n\n3.4.2 래스터 테셀레이션\n테셀레이션은 공간(2차원 또는 3차원)을 폴리곤을 이용해 더 작은 요소로 세분화한 것을 말한다. 규칙(정규) 테셀레이션은 정규 폴리곤(삼각형, 사각형 또는 육각형)으로 구성되는 테셀레이션을 의미한다. 정사각형을 사용하는 테셀레이션이 공간데이터에 일반적으로 사용되는 이를 래스터 데이터라고 부른다. 래스터 데이터는 공간적 디멘션 \\(d\\)를 정규 셀로 세분하는데, 각 셀 \\(d_i\\)는 좌측 닫힘 및 우측 개방 범위(구간)로 형성된다(역자주: 어떤 범위가 좌측 닫힘 치 우측 개방의 형식으로 규정되었다는 것은 범위의 왼쪽 끝점은 포함되지만, 범위의 오른쪽 끝점은 포함되지 않는다는 것을 의미한다.)\n\\[\nd_i=d_0+[i\\times \\delta,(i+1)\\times \\delta)\n\\]\n여기서 \\(d_0\\)는 오프셋값, \\(\\delta\\)는 구간(셀 또는 픽셀) 크기, 셀 인덱스인 \\(i\\)는 임의의 값을 취할 수 있지만 연속적인 정수값이어야한다. \\(\\delta\\)는 \\(y\\)-축(북거)에 대해서는 보통 음의 값을 취하는데 래스터의 행은 남쪽으로 갈수록 증가하는 반면 \\(y\\)-좌표값은 감소하는 것과 보조를 맞추기 위함이다.\n일반적인 폴리곤 테셀레이션에서는 두 개의 폴리곤이 공유하는 경계에 위치한 점의 할당이 모호하지만, 정규 테셀레이션에서는 좌측 닫힘 “[” 및 우측 개방 “)” 구간을 사용하기 때문에 이러한 모호성이 해소된다. 이는 \\(y\\)-좌표에 음의 \\(\\delta\\)값이 \\(x\\)-좌표에 양의 \\(\\delta\\)값이 적용된 적용된 래스터의 경우, 각 셀의 모서리 점들 중 좌측 상단의 것만이 해당 셀의 부분으로 간주된다는 것을 의미한다. 이로 인해 발생할 수 있는 예기치 못한 결과중 한 예가 그림 3.6에 나타나 있다.\n\n\n\n\n\n\n\n그림 3.5: 래스터화의 예기치 못한 결과: 각 셀의 좌측 상단 지점만 셀의 내부로 간주되기 때문에 대각선 아래에서 붉은 선에 접촉한 셀들도 래스터로 전환되었다.\n\n\n\n\n시간 차원을 좌측 닫힘 및 우측 개방 구간으로 세분하는 것은 매우 일반적이며, 이는 R의 xts 패키지와 같은 시계열 소프트웨어의 암묵적인 기본 가정이다. 즉, 시간 스탬프(시점)는 시간 간격의 시작을 나타낸다. 다른 모델이 결합될 수도 있다. 예를 들어, 심플 피처 폴리곤을 사용하여 공간을 세분하고 이를 정규 시간 테셀레이션과 결합하여 시공간 벡터 데이터 큐브 개념을 구현할 수 있다. 래스터 및 벡터 데이터 큐브에 대한 논의는 6장에서 다룬다.\n위에서 언급한 것처럼, \\(R^2\\)에 대한 정규 테셀레이션을 생성하는데 활용될 수 있는 폴리곤으로 정사각형 외에 삼각형과 육각형도 있다. 3차원 구체로 확장하면 더 많아지는데, 큐브, 정팔면체, 정이십면체, 정십이면체 등을 포함한다. 큐브를 기반으로 하는 공간 인덱스는 s2geometry이며, H3 라이브러리는 정이십면체를 사용하는데, 밀집화를 위해 (주로) 육각형을 사용한다. 지구 전체를 포괄하는 모자이크 역시 이산 글로벌 그리드라고 불린다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "03.html#네트워크",
    "href": "03.html#네트워크",
    "title": "3  지오메트리",
    "section": "\n3.5 네트워크",
    "text": "3.5 네트워크\n공간적 네트워크느 일반적으로 라인(LINESTRING) 요소로 구성되지만, 네트워크로서의 완결성을 위한 추가적인 위상적 특성을 가진다.\n\n라인스트링의 시작점과 끝점은 다른 라인스트링의 시작점이나 끝점에 연결될 수 있으며, 이를 통해 노드와 엣지의 집합이 형성된다.\n엣지는 방향성을 가질 수 있으며, 이 경우 연결(흐름, 수송)은 한 방향으로만 가능하다.\n\nosmar(Schlesinger and Eugster 2013), stplanr(Lovelace, Ellison, and Morgan 2022), sfnetworks(van der Meer et al. 2022)와 같은 R 패키지는 네트워크 객체를 구성하고 이를 다루는 기능을 제공하며, 네트워크를 통한 최단 또는 최속 경로를 계산할 수 있게 해준다. spatstat 패키지(Baddeley, Turner, and Rubak 2022; Baddeley, Rubak, and Turner 2015)는 포인트 패턴 분석을 선형 네트워크 상에서도 할 수 있는 기능을 제공한다(11장). Lovelace, Nowosad, and Muenchow (2019)의 12장은 네트워크 데이터를 사용한 교통 애플리케이션에 대해 다루고 있다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "03.html#연습문제",
    "href": "03.html#연습문제",
    "title": "3  지오메트리",
    "section": "\n3.6 연습문제",
    "text": "3.6 연습문제\n다음의 연습문제를 풀되, 적절한 곳에서 R을 활용하라.\n\n2차원(평면) 공간에서 심플 피처 지오메트리로 표현될 수 없는 지오메트리의 두 가지 예를 제시하고, 그림으로 표현하시오.\n좌표 10.542, 0.01, 45321.6789를 정밀도 값 1, 1e3, 1e6, 및 1e-2를 사용하여 재계산하시오.\n에너리 인터섹션이 요구되는 현실 문제를 제시하시오.\n지점별로 하나의 폐쇄 폴리곤을 가지는 보로노이 다이어그램(그림 3.3)을 어떻게 만들 수 있는지 설명하시오.\n다음의 지오메트리에 대해 유너리 측도 dimension을 계산하시오. POINT Z (0 1 1), LINESTRING Z (0 0 1,1 1 2), POLYGON Z ((0 0 0,1 0 0,1 1 0,0 00))\nLINESTRING(0 0,1 0)과 LINESTRING(0.5 0,0.5 1)의 DE-9IM 관계를 설명하시오. 개별 문자의 의미도 함께 설명하시오.\n심플 피처 폴리곤의 집합을 가지고 커버리지 하나를 만들 수 있을지의 여부에 대해 답하시오. 만약 답이 그렇다이면 어떤 제약조건 하에서 그것이 가능한지 설명하시오.\nsf 패키지에 들어 있는 nc 카운티 데이터를 가지고, 네 개의 카운티가 동시에 접촉하고 있는 포인트들을 추출하시오.\n\\(y\\)-축을 위한 \\(\\delta\\)값이 양수라면, 그림 3.6은 어떻게 달라질지 설명하시오.\n\n\n\n\n그림 3.1: 심플 피처 지오메트리의 주요 유형\n그림 3.2: DE-9IM: 폴리곤의 내부, 경계, 외부(행)와 라인스트링의 내부, 경계, 외부(열) 간의 인터섹션\n그림 3.3: 포인트의 집합, 왼편은 컨벡스 헐(빨간색), 가운데는 보로노이 폴리곤, 오른편은 들로네 삼각망\n그림 3.4: 박스를 서로다른 순서에 따라 differece를 적용한 결과: 왼쪽은 원리 순서이고 오른쪽은 반대 순서\n그림 3.5: 래스터화의 예기치 못한 결과: 각 셀의 좌측 상단 지점만 셀의 내부로 간주되기 때문에 대각선 아래에서 붉은 선에 접촉한 셀들도 래스터로 전환되었다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>지오메트리</span>"
    ]
  },
  {
    "objectID": "04.html",
    "href": "04.html",
    "title": "4  구체 지오메트리",
    "section": "",
    "text": "“국지적 데카르트 투영 좌표계로 세팅이 되어 있는 GIS 소프트웨어를 글로벌 스케일의 애플리케이션을 위해 확장하는 순간, 오류투성이의 결론이 도출되고 어이없는 측정이 이루어지기 시작한다.” (Chrisman 2012)\n3장에서는 평면인 \\(R^2\\)에에서 정의되는 지오메트리에 대해 논의했다. 이 장에서는 평면이 아니라 3차원 구체(\\(S^2\\)) 상의 지오메트리를 다룰 때 어떠한 변화가 발생하는지에 대해 논의할 것이다.\n우리는 제2장에서 지구의 형태가 일반적으로 구체가 아니라 타원체로 근사된다는 것을 배웠지만, 그림 1.7에서 녹색으로 표시된 라이브러리 중 어느 것도 타원체를 전제한 포괄적인 계산 함수의 세트에 접근할 수 없다. 오직 s2geometry (Dunnington, Pebesma, and Rubak 2023; Veach et al. 2020) 라이브러리만이 이러한 접근을 가능케 하는데, 타원체 대신 구체를 사용한다. 그러나 이전 장에서 사용한 평면(투영된) 공간과 비교할 때, 구는 타원체에 대한 훨씬 더 나은 근사값이다.",
    "crumbs": [
      "공간데이터",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>구체 지오메트리</span>"
    ]
  }
]