{
  "hash": "34cd94416cfcb660907d7f1a89c6328e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ndate-modified: last-modified\nnumber-sections: true\nformat: \n  html: \n    toc: true\ncode-link: true\ncode-copy: true\nexecute: \n  warning: false\n  error: false\n  freeze: auto\neditor: visual\neditor_options: \n  chunk_output_type: console\n---\n\n\n# 데이터 큐브 {#sec-datacube}\n\n데이터 큐브(data cube)는 시간에 걸쳐 일련의 지오메트리 특성을 반복적으로 관찰할 때 자연스럽게 형성된다. 시간 정보는 건물의 건축 연도나 사람의 생년월일을 기록하는 것처럼 피처의 속성으로 간주될 수 있다(5장 참조). 그러나 시간 정보가 속성을 관측한 시점이나 해당 속성에 대한 예측 시점을 나타내는 경우도 있다. 이러한 경우, 시간은 공간과 동등한 위상을 가지며, 시간과 공간은 함께 우리가 관찰ㆍ모델링ㆍ예측ㆍ예보하는 물리적 차원을 설정한다.\n\n우리 세상을 바라보는 한 가지 방법은 세 개의 공간 차원과 한 개의 시간 차원을 포함하는 4차원 공간으로 상정하는 것이다. 이 관점에서 사건은 시간 차원에서의 크기를 지속 시간으로 갖는 '사물' 또는 '객체'가 된다(Galton 2004). 이러한 관점은 우리가 세상을 경험하고 묘사하는 방식과는 다소 맞지 않지만, 데이터 분석의 관점에서는 네 개의 숫자(와 참조 체계) 만으로 관측의 시공간 좌표를 충분히 설명할 수 있.\n\n우리는 데이터 큐브를 공간 및/또는 시간과 관련된 하나 이상의 어레이 차원을 가진 어레이 데이터로 정의한다(Lu, Appel, and Pebesma 2018). 이는 래스터 데이터, 속성을 가진 피처, 시계열 데이터가 모두 데이터 큐브의 특수한 경우임을 의미한다. 데이어 큐브는 3차원 구조에 한정될 필요가 없으므로, 실제로는 큐브라기 보다는 *하이퍼큐브*(hypercube)에 가깝다. 또한 서로 다른 차원의 범위가 동일하거나 비교 가능한 단위를 가질 필요가 없기 때문에, 더 적절한 용어는 *하이퍼-직사각형*(hyper-retangle)일 될 것이다. 그러나 편의상 여기서는 데이터 큐브라는 용어를 사용한다.\n\n데이터 큐브의 표준 형식은 그림 6.1에 제시되어 있으며, 이는 동일한 지역에 대해 서로 다른 시간 단계에서 수집(관찰 또는 모델링)된 래스터 레이어 세트를 원근법 플롯으로 나타낸 것이다. 세 개의 큐브 차원(경도, 위도, 시간)은 서로 직교 관계를 이룬다. 임의의 2차원 큐브 슬라이스는 특정 값에서 하나의 차원을 고정함으로써 얻어지고, 1차원 슬라이스는 특정 값에서 두 개의 차원을 고정함으로써 얻어진다. 스칼라는 세 개의 차원을 특정 값에서 고정했을 때 얻어진다.\n\n\n::: {.cell}\n\n:::\n\n\n![위도, 경도, 시간의 세 차원을 가지 래스터 데이터 큐브](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube-1.png){#fig-6-1}\n\n## 4차원 데이터 큐브\n\n\n::: {.cell}\n\n:::\n\n\n![x, y, 밴드, 시간의 네 차원을 가진 4차원 래스터 데이터 큐브](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4d-1.png){#fig-6-2}\n\n그림 6.2는 4차원 래스터 데이터 큐브를 보여준다(Appel and Pebesma 2019). 여기서 스펙트럼 차원('밴드')을 가진 3차원 래스터 데이터 큐브가 네 번째 차원인 시간 축을 따라 배열되어 있다.(역자주: 여기서 '밴드'는 원격탐사에사 사용되는 용어로, 다중분광 센서가 태양의 전자기 복사 에너지 중 특정 파장대를 감지하는 범위를 의미한다.) 컬러 이미지 데이터는 항상 세 개의 밴드(파란색, 녹색, 빨간색)를 가지며, 이 예제는 스펙트럼 원격탐사 데이터에서 흔히 발견되는 네 번째 밴드(근적외선, NIR)를 포함한다.\n\n그림 6.3은 정확히 동일한 데이터를 평면적으로 배열한 패싯 플롯(또는 산점도 행렬)으로 나타낸 것이다. 플롯의 두 차원($x$ 및 $y$)은 기본적으로는 *밴드*와 *시간* 차원을 의미하지만, 각 세부 플롯 내부에서는 실제 공간 좌표계를 나타낸다.\n\n\n::: {.cell}\n\n:::\n\n\n![두 차원을 기준으로 평면 배열한 4차원 래스터 데이터](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4d2-1.png){#fig-6-3}\n\n## 디멘션, 속성, 서포트\n\n시공간상의 현상은 *정의역*(domain)이 공간과 시간이고, *치역*(range)이 하나 이상의 관측된 속성인 함수로 볼 수 있다.(역자주: 정의역은 함수에 입력될 수 있는 값들의 집합이고, 치역은 함수가 출력할 수 있는 값들의 집합, 즉 가능한 결과값의 범위를 의미한다.) 명확하게 식별 가능한 이산적 사건이나 객체의 경우, 치역은 일반적으로 이산적이며, 이러한 이산성은 시작과 끝의 정밀한 좌표를 설정함으로써 확보되며 이는 벡터 지오메트리와 잘 부합한다. 반면, 기온이나 토지이용 유형처럼 모든 위치에서 값을 가지는 연속적 현상은 무한히 많은 값을 나타내야 하므로, 보통 해당 시공간 도메인(범위)을 *일정하게* 이산화(discretization)하는 전략이 사용된다. 이러한 고려는 널리 알려져 있는 여러 데이터 구조로 이어진다.\n\n-   시계열: 시간의 함수로서 타임라인으로 표현되는 데이터 구조\n\n-   이미지 또는 래스터: 2차원 공간데이터를 위한 데이터 구조\n\n-   이미지의 시간적 시퀀스: 동적 공간데이터를 위한 데이터 구조\n\n세 번째의 데이터 구조는 변수 $Z$가 $x, y, t$에 의존하는 경우이다.\n\n$$\nZ=f(x,y,t)\n$$\n\n이는 시공간 어레이 또는 *데이터 큐브*의 전형적인 형태이다. 정의역을 일정하게 이산화한 지점들이 입체적 모양을 형성하며, 그 형태가 큐브와 유사하기 때문이다. 치역을 구성하는 변수(여기서는 $x, y, t$ )를 큐브 *디멘션*이라고 부른다. 데이터 큐브는 여러 속성을 가질 수 있다.\n\n$$\n\\{Z_1,Z_2,...,Z_p\\}=f(x,y,t)\n$$\n\n만약 $Z$가 함수형 변수라면, 예를 들어 전자기 스펙트럼에서 측정된 반사율 값인 경우, 스펙트럼 파장 $\\lambda$가 추가적인 차원을 형성할 수 있다($Z=f(x,y,t,\\lambda)$). 6.5절에서는 컬러 밴드를 속성으로 표현하는 대안적 방식을 다룬다.\n\n다중 시간 차원도 가능하다. 예를 들어, 여러 시점 $t$에 대해 미래의 여러 시점 $t'$에 대한 예측을 수행하거나, 시간을 연도ㆍ연중 일자ㆍ하루 중 시간 등 여러 차원으로 나누는 경우이다. 데이터 큐브의 가장 일반적인 정의는 $n$개의 차원에서 $p$개의 속성으로의 함수적 매핑이다.\n\n$$\n\\{Z_1,Z_2,...,Z_p\\}=f(D_1,D_2,...,D_n)\n$$\n\n여기서는 하나 이상의 공간 차원과 0개 이상의 시간 차원을 가진 모든 데이터셋을 데이터 큐브로 간주한다. 이렇게 하면 다음과 같은 경우를 모두 포괄할 수 있다.\n\n-   심플 피처(3.1절)\n\n-   피처 집합에 대한 시계열\n\n-   래스터 데이터\n\n-   다분광 래스터 데이터(이미지)\n\n-   다분광 래스터 데이터의 시계열(비디오)\n\n### 정규 디멘션, GDAL의 지오트랜스폼\n\n데이터 큐브는 보통 다차원 어레이에 저장되며, 1-기반 어레이 인덱스 $i$와 일정하게 이산화된 차원 변수 $x$ 사이의 일반적인 관계는 다음과 같다.\n\n$$\nx=o_x+(i-1)d_x\n$$\n\n여기서 여기서 $o_x$는 원점이고, $d_x$ 해당 디멘션의 그리드 간격이다.\n\n그림 1.6 b-c와 같은 더 일반적인 경우에서, $x$와 $y$ 및 어레이 인덱스 $i$와 $j$ 사이의 관계는 다음과 같다.\n\n$$\nx=o_x+(i-1)d_x+(j-1)a_1\n$$\n\n$$\ny=o_y+(i-1)a_2+(j-1)d_y\n$$\n\n여기서 $a_1$과 $a_2$를 아핀(affine) 파라미터라고 하며, 이것은 GDAL에서 사용하는 이른바 *지오변환*(geostransform)이다. $a_1=a_2=0$일 경우, 위 수식은 $d_x=d_y$인 정사각형 셀을 가진 그림 1.6a의 정규 래스터로 단순화된다. 정수 인덱스의 경우, 좌표는 그리드 셀의 시작 모서리 좌표이며, 셀 면적(픽셀)은 인덱스 값이 $i$(포함)에서 $i+1$(제외)로 범위가 설정된 영역을 차지한다. 대부분의 이미지 형식에서 $d_y$는 음수이며, 이는 이미지 행 인덱스가 $y$값이 감소함에 따라(남쪽으로) 증가함을 의미한다. 왼쪽 상단 그리드 셀의 *중심* 좌표를 얻기 위해서는, $d_y$가 음수인 경우 $i=1.5$와 $j=1.5$를 사용한다.\n\n직교형 래스터(그림 1.6의 네 번째 사례)의 경우, 어레이 인덱스를 차원 값에 매핑하기 위한 별도의 테이블이 필요하다. 예를 들어 NetCDF 파일은 공간 차원(좌표) 변수의 모든 값을 항상 저장하는데, 이는 주로 공간 그리드 셀의 중심 좌표값이거나 오프셋 값이다. 추가로, 그리드 셀의 경계를 저장하여 직교 차원을 정의하거나, 좌표 변수 값과 셀 경계 간의 관계를 명확히 표현할 수도 있다.\n\n곡선형 래스터의(그림 1.6의 다섯 번째 사례)의 경우, 모든 $i,j$ 조합을 $x,y$ 쌍에 매핑하는 어레이가 필요하거나, 이를 수행하는 파라미터 함수(투영 또는 역투영 함수)가 필요하다. NetCDF 파일은 일반적으로 이 두 가지를 모두 제공한다. GDAL은 이러한 어레이를 지리위치(geolocation) 어레이라고 부르며, 이에 대한 변환 기능을 폭넓게 지원한다.\n\n### 큐브 차원과 서포트\n\n5.1절에서는 속성 변수의 *공간적* 서포트를 해당 관측 또는 예측과 관련된 지오메트리의 크기(길이, 면적, 부피)로 정의하였다. 이 개념은 *시간적* 서포트에도 적용된다. 시간은 시작과 종료가 명시된 기간으로 보고되는 경우가 많지 않지만, 종종 타임스탬프 자체가 기간을 암시한다. 예를 들어 ISO-8601 표준에서는 '2021'이 해당 연도 전체를, '2021-01'은 해당 연월 전체를 의미한다. 또 다른 경우에는, 현재 레코드의 타임스탬프에서 다음 레코드의 타임스탬프까지(타임스템프 자체는 제외)를 기간으로 간주하기도 한다.\n\n예를 들어, MODIS 위성 이미지는 16일 동안의 관측을 단일 이미지로 합성한 식생 지수(NDVI 및 EVI)를 제공하는데, 이는 16일 '블록 서포트'를 갖는다. 반면 Sentinel-2나 Landsat-8은 특정 시점의 '스냅샷' 이미지를 제공하므로 '포인트 서포트'를 가진다. 시간적 포인트 서포트 데이터를 월별 값으로 집계할 경우, 해당 월에 속하는 모든 이미지를 선택하여 집계하면 된다. 그러나 MODIS의 16일 합성과 같이 시간적 블록 서포트를 가진 이미지를 다른 기간 단위로 집계할 때는, 목표 기간과 합성 기간의 겹치는 정도에 따라 가중치를 부여해야 한다.(역자주: 예를 들어, 세 개의 16일 합성 이미지(2024-12-17\\~2025-01-01, 2025-01-01\\~2025-01-16, 2025-01-16\\~2025-02-01)가 있고, 목표 기간이 2025년 1월 평균이라면, 각 합성 이미지의 해당 합성 기간과 목표 기간의 중첩 비율에 따라 각각 1/16, 15/16, 16/16이 된다.) 이는 5.3절에서 다룬 면적-가중 인터폴레이션과 유사한 개념으로, 시간 영역에서의 가중 집계라 할 수 있다.\n\n## 데이터 큐브 오퍼레이션\n\n### 큐브의 분할: 필터\n\n데이터 큐브는 특정 차원을 일정한 값으로 고정하여 여러 개의 서브-큐브로 분할할 수 있다. 그림 6.4는 시간, 스펙트럼, 또는 공간 디멘션을 이러한 방식으로 고정해 얻은 서브-큐브를 보여준다. 이 때 공간 필터링은 특정 공간 차원을 단일 값으로 고정하는 대신, 특정 하위-영역을 선택하는 방식으로 이루어는데, 이 방법이 더 일반적이다. $x$ 또는 $y$를 고정하면 해당 값의 횡단면을 따라 서브-큐브가 생성되며, 이를 통해 하나의 공간 차원과 하나의 시간 차원에서 속성을 색상으로 표현한 호브몰러 다이어그램(Hovmöller diagram)을 만들 수 있다.\n\n\n::: {.cell}\n\n:::\n\n\n![시간, 밴드 혹은 공간을 기준으로 한 데이터 큐브 필터링](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4filter-1.png){#fig-6-4}\n\n### 디멘션에 함수 적용\n\n잘 사용되는 또 다른 오퍼레이션은 하나 이상의 큐브 디멘션에 함수를 적용하는 것이다. 가장 간단한 예로는 `abs`, `sin` , `sqrt`와 같은 함수를 큐브의 모든 값에 적용하거나, 큐브 전체 값을 단일 스칼라로 반환하는 경우(예: 전체 평균이나 최대값 계산)가 있다. 또 다른 예로는 선택된 디멘션에만 함수를 적용하는 방식이 있다. 예를 들어, 그림 6.5처럼 각 개별(픽셀/밴드) 시계열에 시간적 로패스 필터(low-pass filter)를 적용하거나, 그림 6.6처럼 모든 밴드ㆍ시간 조합에 대해 각 공간 슬라이스에 공간적 로패스 필터를 적용하는 경우가 이에 해당한다.(역자주: 로패스 필터링은 데이터에서 저주파 성분은 통과시키고 고주파 성분은 차단하는 기법으로, 원본 이미지보다 평활화된 이미지를 생성한다. 하이패스 필터를 적용하면 반대로 저주파 성분은 차단하고 고주파 성분은 통과시켜 경계나 세부 구조가 강조된 이미지를 얻을 수 있다.)\n\n\n::: {.cell}\n\n:::\n\n\n![시계열 데이터에 로패스 필터링 적용하기](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4apply1-1.png){#fig-6-5}\n\n\n::: {.cell}\n\n:::\n\n\n![공간 슬라이스에 로패스 필터링 적용하기](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4apply2-1.png){#fig-6-6}\n\n### 디멘션 축소\n\n전체 데이터 큐브에 `mean` 함수를 적용하면 모든 차원이 사라지고, 결과로 생성된 '데이터 큐브\"는 차원 0을 갖게 된다. 함수는 특정 디멘션 집합에만 적용할 수도 있는데, 이 경우 해당 디멘션만 사라지거나 *축소*된다. 필터링이 이러한 디멘션 축소의 한 형태라는 점은 이미 살펴본 바 있다. 마찬가지로, 모든 시계열의 최대값을 계산하거나 각 공간 슬라이스의 평균을 구하는 작업, NDVI와 같은 밴드 지수를 계산하여 서로 다른 스펙트럼 값을 단일한 새로운 '밴드'로 요약하는 것도 모두 차원 축소에 해당한다. 그림 6.7은 이러한 다양한 옵션을 보여준다.\n\n\n::: {.cell}\n\n:::\n\n\n![데이터 큐브의 차원 축소](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4reduce-1.png){#fig-6-7}\n\n## 래스터 큐브를 벡터 큐브로 애그리게이션 하기\n\n그림 6.8은 4차원 래스터 데이터 큐브를 3차원 *벡터 데이터 큐브*로 애그리게이션 하는 과정을 보여준다. 래스터의 픽셀은 벡터 지오메트리와의 공간적 인터섹션 관계에 따라 그룹화되며, 각 그룹은 평균이나 최대값과 같은 집계 함수를 통해 단일 값으로 축소된다. 예를 들어, 두 개의 공간적 디멘션 $x$와 $y$는 피처 지오메트리의 1차원적 시퀀스로 구성된 단일 디멘션으로 축소되는데, 여기서 피처 지오메트리는 $x$와 $y$의 좌표를 갖는 공간 상에서 정의된다. 애그리게이션은 `POINT` 지오메트리를 기준으로 수행할 수도 있으며, 이 경우에는 집계 함수가 필요 없다. `POINT` 위치에서의 속성값은 해당 위치의 픽셀 값을 쿼리하거나, 가장 가까운 픽셀로부터 인터폴레이션하여 *추출*할 수 있다.\n\n\n::: {.cell}\n\n:::\n\n\n![래스터 데이터 큐브를 벡터 데이터 큐브로 애그리게이션 하기](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-cube4agg-1.png){#fig-6-8}\n\n또 다른 벡터 데이터 큐브의 사례로는 대기질 데이터를 들 수 있다. 2차원의 $PM_{10}$ 데이터는 다음을 기준으로 구성될 수 있다.\n\n-   모니터링 스테이션\n\n-   시간 간격\n\n이와 유사하게, 인구 수로 구성된 시계열 인구 데이터나 환자 수로 구성된 시계열 역학 데이터도 벡터 데이터 큐브로 정의될 수 있다. 예를 들어, 다음과 같은 기준이 있다.\n\n-   지역: $n$개의 지역\n\n-   연령 그룹: $m$개의 연령 그룹\n\n-   연도: $p$개의 연도\n\n이 경우, 데이터는 $nmp$로 구성된 어레이를 형성한다.\n\n공간데이터사이언스에서 벡터 및 래스터 데이터 큐브를 다루는 것은 매우 유용하다. 이는 많은 변수가 공간적ㆍ시간적으로 변동하며, 디멘션 변경이나 애그리게이션과 같은 작업을 완전히 유연하면서도 체계적인 방식으로 수행할 수 있게 해주기 때문이다. 디멘션 변경의 예는 다음과 같다.\n\n-   대기질 측정값을 정규 그리드(래스터) 상에 인터폴레이션하는 것(12장)\n\n-   포인트나 라인 분포 데이터로부터 밀도 값을 추정하는 것, 예를 들어 주 1회 비행기 통과 횟수를 1km 탐색 반경을 기준으로 추정하는 것(11장)\n\n-   기후 모델 예측값을 행정구역별로 요약 지표로 애그리게이션하는 것\n\n-   MODIS(250m 픽셀, 16일 주기)와 Sentinel-2(10m 픽셀, 5일 주기)와 같은 서로 다른 센서의 지구 관측 데이터를 결합하는 것\n\n하나 이상의 디멘션을 완전히 애그리게이션하는 사례는 다음과 같다.\n\n-   대기질 모니터링 스테이션 중 나쁨 수준 기록 지점 파악(시간)\n\n-   질병 발생률에서 가장 크게 증가한 지역 탐색(공간, 시간)\n\n-   지구 온난화 추세 분석(10년 당 지구 전체의 섭씨 온도 변화)\n\n## 디멘션을 속성으로 교체하기\n\n디멘션이 순서가 없는 범주적 성격을 띠는 경우, 속성 집합을 하나의 단일 디멘션으로 쉽게 변환할 수 있다. 즉, 아래 첫 번째 수식을 두 번째 수식으로 대체할 수 있다.\n\n$$\n\\{Z_1,Z_2,...,Z_p\\}=f(D_1,D_2,...,D_n)\n$$\n\n$$\nZ=f(D_1,D_2,...,D_n,D_{n+1})\n$$\n\n여기서 $D_{n+1}$는 기수 $p$를 가지며 레이블로서 $Z_1,Z_2,...,Z_p$(라는 이름)을 갖는다. 그림 6.9는 대기질 스테이션에 대한 벡터 데이터 큐브를 보여주는데, 한 디멘션이 대기질 파라미터들로 구성되어 있음을 볼 수 있다. 그림 6.9와 같이 $Z_i$가 서로 전혀 다른 측정 단위를 갖는 경우 '파라미터' 디멘션 $D_{n+1}$을 축소할 때는 주의가 필요하다. 예를 들어, `mean` 또는 `max`와 같은 함수를 적용하는 것은 의미가 없지만, 각 변수의 임계값을 초과하는 관측치의 개수를 세는 것은 의미가 있을 수 있다.\n\n\n::: {.cell}\n\n:::\n\n\n![대기질의 시계열 데이터를 가진 벡터 데이터 큐브](https://r-spatial.org/book/06-Cubes_files/figure-html/fig-aqdc-1.png){#fig-6-9}\n\n디멘션과 속성을 유연하게 교환할 수 있게 되면, 분석의 유연성과 확장 가능성이 크게 높아진다(Brown, 2010).\n\n## 기타 동적 공간데이터\n\n앞서 우리는 데이터 큐브 구조와 잘 맞는 다양한 동적 래스터 및 벡터 데이터의 예를 살펴보았다. 그러나 일부 데이터 유형은 그렇지 않다. 특히 시공간 포인트 패턴(11장)과 경로 데이터\\[이동 데이터; 최근 리뷰는 Joo et al. (2020) 참조\\]는 데이터 큐브로 처리하기보다는 보다 간단한 방식으로 다루어지는 경우가 많다. 시공간 포인트 패턴은 사건이나 객체의 시공간 좌표 집합을 의미한다. 예를 들어, 사고, 발병, 교통 체증, 번개와 같은 사례가 있다. 한편, 경로 데이터는 사람, 자동차, 위성, 동물과 같이 이동하는 객체의 공간적 위치를 시간 순서대로 기록한 시퀀스이다. 경로 데이터의 핵심 정보는 좌표값이며, 이를 일정하게 분할된 그리드 셀 체계의 위치값으로 변환하여 사용할 수 있다. 이러한 변환은 고밀도 지역에서 패턴을 빠르게 탐색하는 등 일부 분석에서 유용하지만, 좌표의 정확성이 손실되어 거리, 방향, 속도 계산과 같은 여러 접근을 어렵게 만든다. 그럼에도 불구하고, 이러한 데이터를 데이터 큐브 형태로 전환하여 사용하는 경우가 종종있다. 이 경우, 시간을 고정한 상태에서 공간을 이산화하거나, 공간을 고정한 상태에서 시간을 이산화하는 방법이 활용된다.\n\n포인트 패턴이나 경로 데이터를 희소(sparse) 어레이 형태로 표현할 수 있으며, 이를 위해 SciDB(Brown, 2010) 또는 TileDB(Papadopoulos et al., 2016)와 같은 시스템을 사용할 수 있다. 이러한 방법은 좌표 정확도 손실의 문제를 상당 부분 완화할 수 있는데, 이를 위해 극도로 세밀한 그리드 디멘션을 선택하거나 데이터 포인트를 포함하는 그리드 셀만을 선택하는 전략이 가능하다. 경로 데이터의 경우에는 개체 단위를 식별하거나, 연속된 이동 시퀀스를 구분하기 위해 별도의 그룹화 디멘션을 추가해야 한다.\n\n## 연습문제\n\n다음의 연습문제에 대해 서술형으로 답하시오. 필요하거나 적절하다면, 주장을 설명하기 위해 R 코드를 활용하시오.\n\n1.  데이터 큐브를 사용하여 이동하는 물체의 경로와 시퀀스 ($x$, $y$, $t$)를 표현하는 것이 어려운 이유를, 이 장의 내용을 바탕으로 답하시오.\n\n2.  인구, 기대 수명, 국내총생산과 같은 변수로 구성된 사회경제적 벡터 데이터 큐브에서 국가와 연도를 디멘션으로 정렬할 때, 어떤 변수들이 공간 디멘션에 대한 블록 스포트를 가지며, 어떤 변수들이 시간 디멘션에 대한 블록 스포트을 가지는지 설명하시오.\n\n3.  Sentinel-2 위성이 수집한 12개의 스펙트럼 밴드를 (i) 밴드별로 별도의 데이터 큐브를 구성하는 경우, (ii) 12개 밴드를 각각 속성으로 갖는 하나의 데이터 큐브로 구성하는 경우, (iii) 스펙트럼 디멘션을 가진 단일 속성 데이터 큐브로 구성하는 경우에 대해, 각각의 장점과 단점을 나열하시오.\n\n4.  그림 1.6에 나타난 곡선 래스터가 특별한 데이터 큐브로 간주될 수 있는 이유를 설명하시오.\n\n5.  다음 문제들이 데이터 큐브 오퍼레이션인 필터, 적용, 축소, 애그리게이션을 사용하여 어떻게 해결될 수 있는지, 그리고 어떤 순서로 적용해야 하는지 설명하시오. 또한 각 문제에 대해 적용되는 함수와, 결과 데이터 큐브의 디멘션(해당되는 경우)을 명시하시오.\n\n    -   대기질 모니터링 스테이션의 시간별 $PM_{10}$ 측정치로부터, 스테이션별 일평균이 50 $\\mu g/m^3$를 초과하는 연간 일수를 계산하시오.\n    -   석유 유출의 항공 이미지 시퀀스를 사용하여, 석유 유출 범위가 가장 넓었던 시점과 그 때의 해당 범위를 찾으시오.\n    -   10년간의 전 세계 일일 해수면 온도(SST) 래스터 맵을 사용하여, SST 값의 시간적 추세가 상위 10%에 해당하는 지역과 하위 10%에 해당하는 지역을 찾으시오.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}