---
date-modified: last-modified
number-sections: true
format: 
  html: 
    toc: true
code-link: true
code-copy: true
execute: 
  warning: false
  error: false
  freeze: auto
editor: visual
---

# 구체 지오메트리 {#sec-spherical}

"국지적 데카르트 투영 좌표계로 설정된 GIS 소프트웨어를 글로벌 스케일의 애플리케이션에 확장하는 순간, 오류투성이의 결론이 도출되고 터무니없는 측정이 시작한다." (Chrisman 2012)

3장에서는 평면 공간 $R^2$에에서 정의되는 지오메트리에 대해 논의했다. 이 장에서는 평면이 아니라 3차원 구면($S^2$) 위의 지오메트리를 다룰 때 발생하는 변화를 살펴볼 것이다.

우리는 2장에서 지구의 형태가 일반적으로 구체가 아니라 타원체로 근사된다는 것을 배웠지만, 그림 1.7에서 녹색으로 표시된 라이브러리 중 어느 것도 타원체를 전제로 한 포괄적인 계산 함수 세트에 접근할 수 없다. 오직 s2geometry(Dunnington, Pebesma, and Rubak 2023; Veach et al. 2020) 라이브러리만이 이러한 접근을 가능하게 하는데, 이 라이브러리는 타원체 대신 구체를 사용한다. 그러나 이전 장에서 다룬 평면(투영된) 공간과 비교할 때, 구체는 타원체에 대한 *훨씬* 더 나은 근사값이다.(역자주: s2geometry 라이브러리만이 지리공간 계산에 특화된 기능을 제공하기는 하지만, 이것도 완벽한 타원체 모형에 기반한 계산이 아니라 구체 모형을 사용하여 모든 계산을 근사한다는 의미이다.)

## 직선

3장에서 다룬 심플 피처의 기본 전제는 지오메트리가 *직선으로 연결된* 포인트들의 시퀀스로 표현된다는 것이다. $R^2$(또는 데카르트 공간)에서는 이것이 자명하지만, 구체 상에서는 직선이 존재하지 않는다. 두 지점을 연결하는 가장 짧은 경로는 두 지점을 지나는 원의 호로, 이를 *대권호*(grate circle segment)라고도 한다. 이로 인해 구의 반대편에 있는 두 점을 연결하는 *가장* 짧은 거리의 선은 존재하지 않으며, 이들 점을 잇는 모든 대원호는 동일한 길이를 갖는다. GeoJSON 표준(Butler et al. 2016)은 측지 좌표계에서 직선의 정의에 대해 독자적인 해석을 제시하고 있다(이 장 말미의 연습문제 1 참조).

## 링 디렉션과 완전 폴리곤

구체 상에 존재하는 폴리곤은 구 표면을 내부와 외부, 두 개의 유한한 면적으로 나눈다. $R^2$에서 적용되는 ‘반시계 방향 규칙’은 구면에서는 잘 작동하지 않는데, 이는 방향 해석에 따라 내부가 달라지기 때문이다.(역자주: 구면에서는 반시계 방향이라는 개념이 모호할 수 밖에 없다.) 일반적으로는 폴리곤의 점을 순서대로 따라갈 때, 경계의 왼쪽(또는 오른쪽)을 내부로 정의한다. 점의 순서를 반대로 하면 내부와 외부가 뒤바뀌게 된다.

3장에서 엠프티 폴리곤에 대해 배웠는데, 반대로 지표면 전체를 포괄하는 *완전 폴리곤*(whole polygon) 개념도 생각할 수 있다. 이 개념은, 예를 들어 완전 폴리곤과 육지부의 합집합과의 기하학적 차이를 통해 해양부를 정의할 때 유용하게 사용될 수 있다(그림 8.1과 그림 11.6 참고).

## 바운딩 박스, 바운딩 직사각형, 바운딩 캡

$R^2$에서는 $x$와 $y$ 좌표의 범위를 이용해 바운딩 박스를 쉽게 정의할 수 있지만, 타원체 좌표의 경우 지오메트리가 반대자오선(antimeridian)(경도 $\pm 180$)이나 극점을 가로지를 때 이러한 범위는 크게 유용하지 않다.(역자주: 반대자오선은 본초자오선의 반대편에 위치한 자오선을 의미하는 것으로 동경 180도 혹은 서경 180도 경선을 지칭한다.)

$R^2$에서 낮은 $x$ 값이 높은 값의 서쪽에 있다는 가정은 반대자오선을 넘을 때 성립하지 않는다. 구체 상의 영역을 정의하는 보다 자연스러운 대안은 바운딩 캡(bounding cap)으로, 이는 영역의 중심 좌표와 반지름만으로 정의할 수 있다. 예를 들어 남극 대륙의 경우, 그림 4.1의 (a)와 (c)에 나타나 있는 것처럼, 바운딩 박스는 다음의 좌표 범위를 통해 정의된다.

```{r}
#| echo: false
#| eval: false
library(sf) |> suppressPackageStartupMessages()
library(maps) |> suppressPackageStartupMessages()
library(dplyr) |> suppressPackageStartupMessages()
map(fill = TRUE, plot = FALSE) |>
  st_as_sf() |>
  filter(ID == "Antarctica") -> a
st_bbox(a)
```

``` r
#   xmin   ymin   xmax   ymax 
# -180.0  -85.2  179.6  -60.5
```

이 바운딩 박스는 명백히 `ymin`이 -90이고 `xmax`가 180인 지역을 포함하지 않는다. 반면 바운딩 캡은 해당 지역을 포함한다.

```{r}
#| echo: false
#| eval: false
library(s2)
s2_bounds_cap(a)
```

``` r
#   lng lat angle
# 1   0 -90  29.5
```

해당 지역을 포함하는 또 다른 지오메트리에 바운딩 *직사각형*(rectangle)이 있다.

```{r}
#| echo: false
#| eval: false
s2_bounds_rect(a)
```

``` r
#   lng_lo lat_lo lng_hi lat_hi
# 1   -180    -90    180  -60.5
```

반대자오선을 가로지르는 지역의 예로 피지 제도를 들 수 있으며, 피지 제도의 바운딩 박스는 다음과 같이 정의된다.

```{r}
#| echo: false
#| eval: false
map(fill = TRUE, plot = FALSE) |>
  st_as_sf() |>
  filter(ID == "Fiji") -> Fiji
st_bbox(Fiji)
```

``` r
#   xmin   ymin   xmax   ymax 
# -179.9  -21.7  180.2  -12.5
```

지구를 한바퀴 도는 정도의 크기이다. 동일한 지역에 대한 바운딩 직사각형은 다음과 같이 정의된다.

```{r}
#| echo: false
#| eval: false
s2_bounds_rect(Fiji)
```

``` r
#   lng_lo lat_lo lng_hi lat_hi
# 1    175  -21.7   -178  -12.5
```

여기서 `lng_lo`가 `lng_hi` 보다 더 *큰* 값을 갖는데, 이는 바운딩 직사각형이 반대자오선을 가로지른다는 것을 의미한다. 좌표 범위만으로는 이러한 위치 관계를 추론하는 것은 극히 어렵다.

## 구체 상의 밸리드 지오메트리

많은 글로벌 데이터셋은 타원체 좌표로 제공되지만 \[-180,180\]$\times$\[-90,90\]의 $R^2$ 공간에서도 잘 "작동"하도록 사전 조치되어 있다. 이것은 다음과 같은 사항을 의미한다.

-   반대자오선(경도 $\pm 180$)을 가로지르는 지오메트리는 양쪽으로 분할되어 횡단 현상은 발생하지 않으나, 두 부분은 거의 서로 맞닿아 있다.

-   극점을 포함하는 지오메트리, 예를 들어 남극은 $\pm 180$를 기준으로 분할되어 (-180,-90)과 (180,-90)가 서로 다른 좌표로 취급되지만, 실질적으로는 두 좌표 모두 지리적 남극(Geographic South Pole)을 나타낸다.

그림 4.1은 남극의 두 가지 다른 표현을 보여준다. 위쪽은 $R^2$을 상정한 타원체 좌표이며, 아래쪽은 극평사도법(Polar Stereographic projection)으로 표현된 것이다. 왼쪽은 지리적 남극을 중심으로 분할이 없는 경우이고, 오른쪽은 지리적 남극을 중심으로한 분할이 있는 경우이다.

폴리곤 (b)와 (c)는 밸리드하지만, 폴리곤 (a)는 자기-교차로 인해 밸리드하지 않으며, 폴리곤 (d)는 남극을 향하는 변을 두 번 지나기 때문에 밸리드하지 않다. 구체($S^2$) 상에서는 폴리곤 (a)는 밸리드하지만, (b)는 (d)와 같은 이유로 밸리드하지 않다.

```{r}
#| echo: false
#| eval: false
#| label: fig-4-1
#| fig-cap: "남극 폴리곤을 나타낸 것으로 (a)와 (c)는 POINT(-180 90)를 통과하지 않고, (b)와 (d)는 POINT(-180 -90)와 POINT(180 -90)를 통과한다."

# maps:
par(mfrow = c(2,2))
par(mar = c(1,1.2,1,1))
m <- st_as_sf(map(fill=TRUE, plot=FALSE))
m <- m[m$ID == "Antarctica", ]
plot(st_geometry(m), asp = 2)
title("a (not valid)")
# ne:
library(rnaturalearth)
# Support for Spatial objects (`sp`) will be deprecated in {rnaturalearth} and will be removed in a future release of the package. Please use `sf` objects with {rnaturalearth}. For example: `ne_download(returnclass = 'sf')`
ne <- ne_countries(returnclass = "sf")
ne <- ne[ne$region_un == "Antarctica", "region_un"]
plot(st_geometry(ne), asp = 2)
title("b (valid)")
# 3031
m |>
  st_geometry() |>
  st_transform(3031) |>
  plot()
title("c (valid)")
ne |>
  st_geometry() |>
  st_transform(3031) |>
  plot()
title("d (not valid)")
```

![남극 폴리곤을 나타낸 것으로 (a)와 (c)는 POINT(-180 90)를 통과하지 않고, (b)와 (d)는 POINT(-180 -90)와 POINT(180 -90)를 통과한다.](https://r-spatial.org/book/04-Spherical_files/figure-html/fig-antarctica-1.png){#fig-4-1}

## 연습문제

다음의 연습문제를 풀되, 적절한 부분에서 R을 활용하라.

1.  GeoJSON 형식(Butler et al. 2016)은 타원체 좌표 간의 '직선'을 어떻게 정의하는가(섹션 3.1.1)? 이 정의를 적용했을 때, `LINESTRING(0 85, 180 85)`는 극투영법에서 어떻게 표현되는가? 북극을 통과하도록 이 지오메트리를 수정하려면 어떻게 해야 하는가?

2.  $S^2$ 상의 전형적인 폴리곤의 링의 디렉션을 어떻게 확인할 수 있는가?

3.  바운딩 박스 대신 바운딩 캡을 사용하는 이점이 있는가? 있다면, 그 이점을 열거하시오.

4.  왜 작은 지역에 대해 해당 지역을 중심으로 한 정사도법이 $S^2$ 상의 지오메트리를 잘 근사하는가?

5.  `rnaturalearth::ne_countries(country = "Fiji", returnclass = "sf")`를 사용하여 피지의 지오메트리가 $R^2$에서 밸리드한지, 피지를 중심으로 한 정사도법에서 밸리드한지, 그리고 $S^2$ 상에서 밸리드한지 확인하시오. $S^2$ 상에서 지오메트리를 밸리드하게 만들기 위해서는 어떤 조치를 취해야 하는가? 밸리드하게 만들어진 지오메트리를 $R^2$로 별환하여 지도로 그려보시오. 또한, 피지의 센트로이드를 $R^2$와 $S^2$ 각각에서 계산하고, 두 센트로이드 간 거리를 구하시오.

6.  **giscoR** 패키지의 `gisco_countries` 데이터셋에서 `NAME_ENGL == "Fiji"`인 국가를 선택하시오. 이 국가의 지오메트리가 구체 상에서 벨리드한가? 벨리드하다면, 그 이유를 설명하시오.
